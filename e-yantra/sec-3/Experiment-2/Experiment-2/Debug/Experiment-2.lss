
Experiment-2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800100  00000f74  00001008  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f74  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800120  00800120  00001028  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001028  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001084  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  000010c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001207  00000000  00000000  000011b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000093a  00000000  00000000  000023bb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008f3  00000000  00000000  00002cf5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001f4  00000000  00000000  000035e8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005df  00000000  00000000  000037dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009ce  00000000  00000000  00003dbb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  00004789  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	b4 c0       	rjmp	.+360    	; 0x16a <__ctors_end>
   2:	00 00       	nop
   4:	cd c0       	rjmp	.+410    	; 0x1a0 <__bad_interrupt>
   6:	00 00       	nop
   8:	cb c0       	rjmp	.+406    	; 0x1a0 <__bad_interrupt>
   a:	00 00       	nop
   c:	c9 c0       	rjmp	.+402    	; 0x1a0 <__bad_interrupt>
   e:	00 00       	nop
  10:	c7 c0       	rjmp	.+398    	; 0x1a0 <__bad_interrupt>
  12:	00 00       	nop
  14:	c5 c0       	rjmp	.+394    	; 0x1a0 <__bad_interrupt>
  16:	00 00       	nop
  18:	c3 c0       	rjmp	.+390    	; 0x1a0 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	c1 c0       	rjmp	.+386    	; 0x1a0 <__bad_interrupt>
  1e:	00 00       	nop
  20:	bf c0       	rjmp	.+382    	; 0x1a0 <__bad_interrupt>
  22:	00 00       	nop
  24:	bd c0       	rjmp	.+378    	; 0x1a0 <__bad_interrupt>
  26:	00 00       	nop
  28:	bb c0       	rjmp	.+374    	; 0x1a0 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	b9 c0       	rjmp	.+370    	; 0x1a0 <__bad_interrupt>
  2e:	00 00       	nop
  30:	b7 c0       	rjmp	.+366    	; 0x1a0 <__bad_interrupt>
  32:	00 00       	nop
  34:	b5 c0       	rjmp	.+362    	; 0x1a0 <__bad_interrupt>
  36:	00 00       	nop
  38:	b3 c0       	rjmp	.+358    	; 0x1a0 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	b1 c0       	rjmp	.+354    	; 0x1a0 <__bad_interrupt>
  3e:	00 00       	nop
  40:	af c0       	rjmp	.+350    	; 0x1a0 <__bad_interrupt>
  42:	00 00       	nop
  44:	ad c0       	rjmp	.+346    	; 0x1a0 <__bad_interrupt>
  46:	00 00       	nop
  48:	ab c0       	rjmp	.+342    	; 0x1a0 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	a9 c0       	rjmp	.+338    	; 0x1a0 <__bad_interrupt>
  4e:	00 00       	nop
  50:	a7 c0       	rjmp	.+334    	; 0x1a0 <__bad_interrupt>
  52:	00 00       	nop
  54:	d7 c0       	rjmp	.+430    	; 0x204 <__vector_21>
  56:	00 00       	nop
  58:	a3 c0       	rjmp	.+326    	; 0x1a0 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	a1 c0       	rjmp	.+322    	; 0x1a0 <__bad_interrupt>
  5e:	00 00       	nop
  60:	9f c0       	rjmp	.+318    	; 0x1a0 <__bad_interrupt>
  62:	00 00       	nop
  64:	9d c0       	rjmp	.+314    	; 0x1a0 <__bad_interrupt>
	...

00000068 <__trampolines_end>:
  68:	6e 61       	ori	r22, 0x1E	; 30
  6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
  6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
  7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
  8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
  9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
  ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
  bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
  cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
  dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
  ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
  fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
 10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
 11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
 12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
 13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
 14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
 15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
 16a:	11 24       	eor	r1, r1
 16c:	1f be       	out	0x3f, r1	; 63
 16e:	cf ef       	ldi	r28, 0xFF	; 255
 170:	d8 e0       	ldi	r29, 0x08	; 8
 172:	de bf       	out	0x3e, r29	; 62
 174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
 176:	11 e0       	ldi	r17, 0x01	; 1
 178:	a0 e0       	ldi	r26, 0x00	; 0
 17a:	b1 e0       	ldi	r27, 0x01	; 1
 17c:	e4 e7       	ldi	r30, 0x74	; 116
 17e:	ff e0       	ldi	r31, 0x0F	; 15
 180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
 182:	05 90       	lpm	r0, Z+
 184:	0d 92       	st	X+, r0
 186:	a0 32       	cpi	r26, 0x20	; 32
 188:	b1 07       	cpc	r27, r17
 18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
 18c:	21 e0       	ldi	r18, 0x01	; 1
 18e:	a0 e2       	ldi	r26, 0x20	; 32
 190:	b1 e0       	ldi	r27, 0x01	; 1
 192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
 194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
 196:	a2 32       	cpi	r26, 0x22	; 34
 198:	b2 07       	cpc	r27, r18
 19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
 19c:	53 d0       	rcall	.+166    	; 0x244 <main>
 19e:	e8 c6       	rjmp	.+3536   	; 0xf70 <_exit>

000001a0 <__bad_interrupt>:
 1a0:	2f cf       	rjmp	.-418    	; 0x0 <__vectors>

000001a2 <sharp_sensor_pin_config>:

	// clear the MUX5 bit for next conversion
	ADCSRB_reg &= ~(1 << MUX5_bit);

	// clear the MUX[4:0] bits for next conversion
	ADMUX_reg &= ((1 << REFS0_bit)|(1 << ADLAR_bit));
 1a2:	38 98       	cbi	0x07, 0	; 7
 1a4:	40 98       	cbi	0x08, 0	; 8
 1a6:	08 95       	ret

000001a8 <adc_init>:
 1a8:	f8 94       	cli
 1aa:	8e e9       	ldi	r24, 0x9E	; 158
 1ac:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 1b0:	eb e7       	ldi	r30, 0x7B	; 123
 1b2:	f0 e0       	ldi	r31, 0x00	; 0
 1b4:	80 81       	ld	r24, Z
 1b6:	80 7b       	andi	r24, 0xB0	; 176
 1b8:	80 83       	st	Z, r24
 1ba:	ec e7       	ldi	r30, 0x7C	; 124
 1bc:	f0 e0       	ldi	r31, 0x00	; 0
 1be:	80 e4       	ldi	r24, 0x40	; 64
 1c0:	80 83       	st	Z, r24
 1c2:	80 81       	ld	r24, Z
 1c4:	8f 7d       	andi	r24, 0xDF	; 223
 1c6:	80 83       	st	Z, r24
 1c8:	80 e8       	ldi	r24, 0x80	; 128
 1ca:	80 bf       	out	0x30, r24	; 48
 1cc:	78 94       	sei
 1ce:	08 95       	ret

000001d0 <select_adc_channel>:
 1d0:	ec e7       	ldi	r30, 0x7C	; 124
 1d2:	f0 e0       	ldi	r31, 0x00	; 0
 1d4:	90 81       	ld	r25, Z
 1d6:	28 2f       	mov	r18, r24
 1d8:	2f 71       	andi	r18, 0x1F	; 31
 1da:	92 2b       	or	r25, r18
 1dc:	90 83       	st	Z, r25
 1de:	85 fd       	sbrc	r24, 5
 1e0:	03 c0       	rjmp	.+6      	; 0x1e8 <select_adc_channel+0x18>
 1e2:	80 91 7b 00 	lds	r24, 0x007B	; 0x80007b <__TEXT_REGION_LENGTH__+0x7f807b>
 1e6:	02 c0       	rjmp	.+4      	; 0x1ec <select_adc_channel+0x1c>
 1e8:	88 e0       	ldi	r24, 0x08	; 8
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	eb e7       	ldi	r30, 0x7B	; 123
 1ee:	f0 e0       	ldi	r31, 0x00	; 0
 1f0:	90 81       	ld	r25, Z
 1f2:	89 2b       	or	r24, r25
 1f4:	80 83       	st	Z, r24
 1f6:	08 95       	ret

000001f8 <start_adc>:
 1f8:	ea e7       	ldi	r30, 0x7A	; 122
 1fa:	f0 e0       	ldi	r31, 0x00	; 0
 1fc:	80 81       	ld	r24, Z
 1fe:	80 64       	ori	r24, 0x40	; 64
 200:	80 83       	st	Z, r24
 202:	08 95       	ret

00000204 <__vector_21>:
}


// read the ADC data after the conversion is complete
ISR( ADC_vect ){
 204:	1f 92       	push	r1
 206:	0f 92       	push	r0
 208:	0f b6       	in	r0, 0x3f	; 63
 20a:	0f 92       	push	r0
 20c:	11 24       	eor	r1, r1
 20e:	2f 93       	push	r18
 210:	8f 93       	push	r24
 212:	9f 93       	push	r25

	adc_10bit_data = ADCL_reg + (ADCH_reg << 8) ;
 214:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 218:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	98 2f       	mov	r25, r24
 220:	88 27       	eor	r24, r24
 222:	82 0f       	add	r24, r18
 224:	91 1d       	adc	r25, r1
 226:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <__data_end+0x1>
 22a:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__data_end>

}
 22e:	9f 91       	pop	r25
 230:	8f 91       	pop	r24
 232:	2f 91       	pop	r18
 234:	0f 90       	pop	r0
 236:	0f be       	out	0x3f, r0	; 63
 238:	0f 90       	pop	r0
 23a:	1f 90       	pop	r1
 23c:	18 95       	reti

0000023e <convert_analog_channel_data>:
 */
void convert_analog_channel_data( unsigned char sensor_channel_number ){
	
	// << NOTE >> : You are not allowed to modify or change anything inside this function
	
	select_adc_channel( sensor_channel_number );
 23e:	c8 df       	rcall	.-112    	; 0x1d0 <select_adc_channel>
	
	start_adc();
 240:	db cf       	rjmp	.-74     	; 0x1f8 <start_adc>
 242:	08 95       	ret

00000244 <main>:
 244:	cf 93       	push	r28
/**
 * @brief      Main Function
 *
 * @details    First Initializes the 2nd Sharp sensor and sends its ADC converted data on LCD and UART
 */
int main(void) {
 246:	df 93       	push	r29
 248:	cd b7       	in	r28, 0x3d	; 61
 24a:	de b7       	in	r29, 0x3e	; 62
 24c:	e2 97       	sbiw	r28, 0x32	; 50
 24e:	0f b6       	in	r0, 0x3f	; 63
 250:	f8 94       	cli
 252:	de bf       	out	0x3e, r29	; 62
 254:	0f be       	out	0x3f, r0	; 63
 256:	cd bf       	out	0x3d, r28	; 61
	
	// << NOTE >> : You are not allowed to modify or change anything inside this function except a part of while loop
	
	sharp_sensor_pin_config();			// Initialize the 2nd Sharp sensor
 258:	a4 df       	rcall	.-184    	; 0x1a2 <sharp_sensor_pin_config>
	
	adc_init();							// Initialize the ADC
 25a:	a6 df       	rcall	.-180    	; 0x1a8 <adc_init>
	
	lcd_port_config();					// Initialize the LCD port
 25c:	41 d0       	rcall	.+130    	; 0x2e0 <lcd_port_config>
 25e:	b9 d0       	rcall	.+370    	; 0x3d2 <lcd_init>
	lcd_init();							// Initialize the LCD
 260:	87 e6       	ldi	r24, 0x67	; 103
	
	uart_init(UBRR_VALUE);				// Initialize the UART
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	27 d1       	rcall	.+590    	; 0x4b4 <uart_init>
 266:	80 e0       	ldi	r24, 0x00	; 0
	
	
	// To create string for transmitting 2nd Sharp sensor raw data and corresponding voltage over the UART and LCD
	char tx_raw_adc_data_buffer[25], tx_voltage_buffer[25], lcd_print_raw_adc_data_string[25], lcd_print_voltage_string[25];
	
	convert_analog_channel_data( sharp_sensor_channel );
 268:	ea df       	rcall	.-44     	; 0x23e <convert_analog_channel_data>
 26a:	0f 2e       	mov	r0, r31
 26c:	fa e7       	ldi	r31, 0x7A	; 122
	
	while(1)
	{
		if ( ( ADCSRA_reg & ( 1 << ADSC_bit ) ) != 0x40 )
 26e:	8f 2e       	mov	r8, r31
 270:	91 2c       	mov	r9, r1
 272:	f0 2d       	mov	r31, r0
 274:	0f 2e       	mov	r0, r31
 276:	f0 e0       	ldi	r31, 0x00	; 0
			sharp_sensor_data = adc_10bit_data;


			// ------------------------------- //
			
			sprintf(lcd_print_raw_adc_data_string, "Raw data: %04d", sharp_sensor_data);
 278:	af 2e       	mov	r10, r31
 27a:	f1 e0       	ldi	r31, 0x01	; 1
 27c:	bf 2e       	mov	r11, r31
 27e:	f0 2d       	mov	r31, r0
 280:	8e 01       	movw	r16, r28
 282:	06 5e       	subi	r16, 0xE6	; 230
 284:	1f 4f       	sbci	r17, 0xFF	; 255
 286:	0f 2e       	mov	r0, r31
 288:	ff e0       	ldi	r31, 0x0F	; 15
			lcd_string(1, 1, lcd_print_raw_adc_data_string);
			
			sprintf(tx_raw_adc_data_buffer, "Raw data: %04d\t", sharp_sensor_data);
 28a:	cf 2e       	mov	r12, r31
 28c:	f1 e0       	ldi	r31, 0x01	; 1
 28e:	df 2e       	mov	r13, r31
 290:	f0 2d       	mov	r31, r0
 292:	ce 01       	movw	r24, r28
 294:	01 96       	adiw	r24, 0x01	; 1
 296:	7c 01       	movw	r14, r24
 298:	f4 01       	movw	r30, r8
 29a:	80 81       	ld	r24, Z
	
	convert_analog_channel_data( sharp_sensor_channel );
	
	while(1)
	{
		if ( ( ADCSRA_reg & ( 1 << ADSC_bit ) ) != 0x40 )
 29c:	86 fd       	sbrc	r24, 6
 29e:	fc cf       	rjmp	.-8      	; 0x298 <main+0x54>
 2a0:	70 90 20 01 	lds	r7, 0x0120	; 0x800120 <__data_end>
		{
			// ------------------------------- //

			sharp_sensor_data = adc_10bit_data;
 2a4:	60 90 21 01 	lds	r6, 0x0121	; 0x800121 <__data_end+0x1>
 2a8:	6f 92       	push	r6
 2aa:	7f 92       	push	r7


			// ------------------------------- //
			
			sprintf(lcd_print_raw_adc_data_string, "Raw data: %04d", sharp_sensor_data);
 2ac:	bf 92       	push	r11
 2ae:	af 92       	push	r10
 2b0:	1f 93       	push	r17
 2b2:	0f 93       	push	r16
 2b4:	e0 d5       	rcall	.+3008   	; 0xe76 <sprintf>
 2b6:	a8 01       	movw	r20, r16
			lcd_string(1, 1, lcd_print_raw_adc_data_string);
 2b8:	61 e0       	ldi	r22, 0x01	; 1
 2ba:	81 e0       	ldi	r24, 0x01	; 1
 2bc:	e0 d0       	rcall	.+448    	; 0x47e <lcd_string>
 2be:	6f 92       	push	r6
			
			sprintf(tx_raw_adc_data_buffer, "Raw data: %04d\t", sharp_sensor_data);
 2c0:	7f 92       	push	r7
 2c2:	df 92       	push	r13
 2c4:	cf 92       	push	r12
 2c6:	ff 92       	push	r15
 2c8:	ef 92       	push	r14
 2ca:	d5 d5       	rcall	.+2986   	; 0xe76 <sprintf>
			uart_tx_string(tx_raw_adc_data_buffer);
 2cc:	c7 01       	movw	r24, r14
 2ce:	08 d1       	rcall	.+528    	; 0x4e0 <uart_tx_string>
 2d0:	80 e0       	ldi	r24, 0x00	; 0
			
			convert_analog_channel_data( sharp_sensor_channel );
 2d2:	b5 df       	rcall	.-150    	; 0x23e <convert_analog_channel_data>
 2d4:	0f b6       	in	r0, 0x3f	; 63
 2d6:	f8 94       	cli
 2d8:	de bf       	out	0x3e, r29	; 62
 2da:	0f be       	out	0x3f, r0	; 63
 2dc:	cd bf       	out	0x3d, r28	; 61
 2de:	dc cf       	rjmp	.-72     	; 0x298 <main+0x54>

000002e0 <lcd_port_config>:
 2e0:	84 b1       	in	r24, 0x04	; 4
 2e2:	87 60       	ori	r24, 0x07	; 7
 * Logic: This function clears LCD by giving specific command as input to lcd_wr_command() function
 * Example Call: lcd_clear();
 */
void lcd_clear (void)
{
	lcd_wr_command(0x01);
 2e4:	84 b9       	out	0x04, r24	; 4
 2e6:	8a b1       	in	r24, 0x0a	; 10
 2e8:	80 6f       	ori	r24, 0xF0	; 240
 2ea:	8a b9       	out	0x0a, r24	; 10
 2ec:	85 b1       	in	r24, 0x05	; 5
 2ee:	88 7f       	andi	r24, 0xF8	; 248
 2f0:	85 b9       	out	0x05, r24	; 5
 2f2:	8b b1       	in	r24, 0x0b	; 11
 2f4:	8f 70       	andi	r24, 0x0F	; 15
 2f6:	8b b9       	out	0x0b, r24	; 11
 2f8:	08 95       	ret

000002fa <lcd_set_4bit>:
 2fa:	8f e9       	ldi	r24, 0x9F	; 159
 2fc:	9f e0       	ldi	r25, 0x0F	; 15
 2fe:	01 97       	sbiw	r24, 0x01	; 1
 300:	f1 f7       	brne	.-4      	; 0x2fe <lcd_set_4bit+0x4>
 302:	00 c0       	rjmp	.+0      	; 0x304 <lcd_set_4bit+0xa>
 304:	00 00       	nop
 306:	28 98       	cbi	0x05, 0	; 5
 308:	2a 98       	cbi	0x05, 2	; 5
 30a:	80 e3       	ldi	r24, 0x30	; 48
 30c:	8b b9       	out	0x0b, r24	; 11
 30e:	29 9a       	sbi	0x05, 1	; 5
 310:	ef e1       	ldi	r30, 0x1F	; 31
 312:	fe e4       	ldi	r31, 0x4E	; 78
 314:	31 97       	sbiw	r30, 0x01	; 1
 316:	f1 f7       	brne	.-4      	; 0x314 <lcd_set_4bit+0x1a>
 318:	00 c0       	rjmp	.+0      	; 0x31a <lcd_set_4bit+0x20>
 31a:	00 00       	nop
 31c:	29 98       	cbi	0x05, 1	; 5
 31e:	ef e9       	ldi	r30, 0x9F	; 159
 320:	ff e0       	ldi	r31, 0x0F	; 15
 322:	31 97       	sbiw	r30, 0x01	; 1
 324:	f1 f7       	brne	.-4      	; 0x322 <lcd_set_4bit+0x28>
 326:	00 c0       	rjmp	.+0      	; 0x328 <lcd_set_4bit+0x2e>
 328:	00 00       	nop
 32a:	28 98       	cbi	0x05, 0	; 5
 32c:	2a 98       	cbi	0x05, 2	; 5
 32e:	8b b9       	out	0x0b, r24	; 11
 330:	29 9a       	sbi	0x05, 1	; 5
 332:	ef e1       	ldi	r30, 0x1F	; 31
 334:	fe e4       	ldi	r31, 0x4E	; 78
 336:	31 97       	sbiw	r30, 0x01	; 1
 338:	f1 f7       	brne	.-4      	; 0x336 <lcd_set_4bit+0x3c>
 33a:	00 c0       	rjmp	.+0      	; 0x33c <lcd_set_4bit+0x42>
 33c:	00 00       	nop
 33e:	29 98       	cbi	0x05, 1	; 5
 340:	ef e9       	ldi	r30, 0x9F	; 159
 342:	ff e0       	ldi	r31, 0x0F	; 15
 344:	31 97       	sbiw	r30, 0x01	; 1
 346:	f1 f7       	brne	.-4      	; 0x344 <lcd_set_4bit+0x4a>
 348:	00 c0       	rjmp	.+0      	; 0x34a <lcd_set_4bit+0x50>
 34a:	00 00       	nop
 34c:	28 98       	cbi	0x05, 0	; 5
 34e:	2a 98       	cbi	0x05, 2	; 5
 350:	8b b9       	out	0x0b, r24	; 11
 352:	29 9a       	sbi	0x05, 1	; 5
 354:	8f e1       	ldi	r24, 0x1F	; 31
 356:	9e e4       	ldi	r25, 0x4E	; 78
 358:	01 97       	sbiw	r24, 0x01	; 1
 35a:	f1 f7       	brne	.-4      	; 0x358 <lcd_set_4bit+0x5e>
 35c:	00 c0       	rjmp	.+0      	; 0x35e <lcd_set_4bit+0x64>
 35e:	00 00       	nop
 360:	29 98       	cbi	0x05, 1	; 5
 362:	ef e9       	ldi	r30, 0x9F	; 159
 364:	ff e0       	ldi	r31, 0x0F	; 15
 366:	31 97       	sbiw	r30, 0x01	; 1
 368:	f1 f7       	brne	.-4      	; 0x366 <lcd_set_4bit+0x6c>
 36a:	00 c0       	rjmp	.+0      	; 0x36c <lcd_set_4bit+0x72>
 36c:	00 00       	nop
 36e:	28 98       	cbi	0x05, 0	; 5
 370:	2a 98       	cbi	0x05, 2	; 5
 372:	80 e2       	ldi	r24, 0x20	; 32
 374:	8b b9       	out	0x0b, r24	; 11
 376:	29 9a       	sbi	0x05, 1	; 5
 378:	8f e1       	ldi	r24, 0x1F	; 31
 37a:	9e e4       	ldi	r25, 0x4E	; 78
 37c:	01 97       	sbiw	r24, 0x01	; 1
 37e:	f1 f7       	brne	.-4      	; 0x37c <lcd_set_4bit+0x82>
 380:	00 c0       	rjmp	.+0      	; 0x382 <lcd_set_4bit+0x88>
 382:	00 00       	nop
 384:	29 98       	cbi	0x05, 1	; 5
 386:	08 95       	ret

00000388 <lcd_wr_command>:
 388:	9b b1       	in	r25, 0x0b	; 11
 38a:	9f 70       	andi	r25, 0x0F	; 15
 38c:	9b b9       	out	0x0b, r25	; 11
 38e:	9b b1       	in	r25, 0x0b	; 11
 390:	28 2f       	mov	r18, r24
 392:	20 7f       	andi	r18, 0xF0	; 240
 394:	92 2b       	or	r25, r18
 396:	9b b9       	out	0x0b, r25	; 11
 398:	28 98       	cbi	0x05, 0	; 5
 39a:	2a 98       	cbi	0x05, 2	; 5
 39c:	29 9a       	sbi	0x05, 1	; 5
 39e:	ef e1       	ldi	r30, 0x1F	; 31
 3a0:	fe e4       	ldi	r31, 0x4E	; 78
 3a2:	31 97       	sbiw	r30, 0x01	; 1
 3a4:	f1 f7       	brne	.-4      	; 0x3a2 <lcd_wr_command+0x1a>
 3a6:	00 c0       	rjmp	.+0      	; 0x3a8 <lcd_wr_command+0x20>
 3a8:	00 00       	nop
 3aa:	29 98       	cbi	0x05, 1	; 5
 3ac:	9b b1       	in	r25, 0x0b	; 11
 3ae:	9f 70       	andi	r25, 0x0F	; 15
 3b0:	9b b9       	out	0x0b, r25	; 11
 3b2:	9b b1       	in	r25, 0x0b	; 11
 3b4:	82 95       	swap	r24
 3b6:	80 7f       	andi	r24, 0xF0	; 240
 3b8:	89 2b       	or	r24, r25
 3ba:	8b b9       	out	0x0b, r24	; 11
 3bc:	28 98       	cbi	0x05, 0	; 5
 3be:	2a 98       	cbi	0x05, 2	; 5
 3c0:	29 9a       	sbi	0x05, 1	; 5
 3c2:	8f e1       	ldi	r24, 0x1F	; 31
 3c4:	9e e4       	ldi	r25, 0x4E	; 78
 3c6:	01 97       	sbiw	r24, 0x01	; 1
 3c8:	f1 f7       	brne	.-4      	; 0x3c6 <lcd_wr_command+0x3e>
 3ca:	00 c0       	rjmp	.+0      	; 0x3cc <lcd_wr_command+0x44>
 3cc:	00 00       	nop
 3ce:	29 98       	cbi	0x05, 1	; 5
 3d0:	08 95       	ret

000003d2 <lcd_init>:
 3d2:	93 df       	rcall	.-218    	; 0x2fa <lcd_set_4bit>
 3d4:	8f e9       	ldi	r24, 0x9F	; 159
 3d6:	9f e0       	ldi	r25, 0x0F	; 15
 3d8:	01 97       	sbiw	r24, 0x01	; 1
 3da:	f1 f7       	brne	.-4      	; 0x3d8 <lcd_init+0x6>
 3dc:	00 c0       	rjmp	.+0      	; 0x3de <lcd_init+0xc>
 3de:	00 00       	nop
 3e0:	88 e2       	ldi	r24, 0x28	; 40
 3e2:	d2 df       	rcall	.-92     	; 0x388 <lcd_wr_command>
 3e4:	81 e0       	ldi	r24, 0x01	; 1
 3e6:	d0 df       	rcall	.-96     	; 0x388 <lcd_wr_command>
 3e8:	86 e0       	ldi	r24, 0x06	; 6
 3ea:	ce df       	rcall	.-100    	; 0x388 <lcd_wr_command>
 3ec:	8e e0       	ldi	r24, 0x0E	; 14
 3ee:	cc df       	rcall	.-104    	; 0x388 <lcd_wr_command>
 3f0:	80 e8       	ldi	r24, 0x80	; 128
 3f2:	ca cf       	rjmp	.-108    	; 0x388 <lcd_wr_command>
 3f4:	08 95       	ret

000003f6 <lcd_cursor>:
 3f6:	82 30       	cpi	r24, 0x02	; 2
 3f8:	69 f0       	breq	.+26     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 3fa:	18 f4       	brcc	.+6      	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 3fc:	81 30       	cpi	r24, 0x01	; 1
 3fe:	31 f0       	breq	.+12     	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 400:	08 95       	ret
 402:	83 30       	cpi	r24, 0x03	; 3
 404:	59 f0       	breq	.+22     	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
 406:	84 30       	cpi	r24, 0x04	; 4
 408:	69 f0       	breq	.+26     	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 40a:	08 95       	ret
 40c:	8f e7       	ldi	r24, 0x7F	; 127
 40e:	86 0f       	add	r24, r22
 410:	bb cf       	rjmp	.-138    	; 0x388 <lcd_wr_command>
 412:	08 95       	ret
 414:	8f eb       	ldi	r24, 0xBF	; 191
 416:	86 0f       	add	r24, r22
 418:	b7 cf       	rjmp	.-146    	; 0x388 <lcd_wr_command>
 41a:	08 95       	ret
 41c:	83 e9       	ldi	r24, 0x93	; 147
 41e:	86 0f       	add	r24, r22
 420:	b3 cf       	rjmp	.-154    	; 0x388 <lcd_wr_command>
 422:	08 95       	ret
 424:	83 ed       	ldi	r24, 0xD3	; 211
 426:	86 0f       	add	r24, r22
 428:	af cf       	rjmp	.-162    	; 0x388 <lcd_wr_command>
 42a:	08 95       	ret

0000042c <lcd_wr_char>:
 * Output: None
 * Logic: This function prints an alpha-numeric character at specified (row, column) position on LCD
 * Example Call: lcd_wr_char(1, 4, 'A') => to write character 'A' to the LCD
 */
void lcd_wr_char(char row, char column, char alpha_num_char)
{
 42c:	cf 93       	push	r28
 42e:	c4 2f       	mov	r28, r20
	lcd_cursor (row, column);
 430:	e2 df       	rcall	.-60     	; 0x3f6 <lcd_cursor>
	
	char temp;
	
	temp = alpha_num_char;
	temp = (temp & 0xF0);
	lcd_data_port_reg &= 0x0F;
 432:	8b b1       	in	r24, 0x0b	; 11
 434:	8f 70       	andi	r24, 0x0F	; 15
 436:	8b b9       	out	0x0b, r24	; 11
	lcd_data_port_reg |= temp;
 438:	8b b1       	in	r24, 0x0b	; 11
 43a:	9c 2f       	mov	r25, r28
 43c:	90 7f       	andi	r25, 0xF0	; 240
 43e:	89 2b       	or	r24, r25
 440:	8b b9       	out	0x0b, r24	; 11
	
	sbit( lcd_control_port_reg, RS_pin );				// RS = 0 --- Data Input
 442:	28 9a       	sbi	0x05, 0	; 5
	cbit( lcd_control_port_reg, RW_pin );				// RW = 0 --- Writing to LCD
 444:	2a 98       	cbi	0x05, 2	; 5
	sbit( lcd_control_port_reg, EN_pin );				// Set Enable Pin
 446:	29 9a       	sbi	0x05, 1	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 448:	8f e1       	ldi	r24, 0x1F	; 31
 44a:	9e e4       	ldi	r25, 0x4E	; 78
 44c:	01 97       	sbiw	r24, 0x01	; 1
 44e:	f1 f7       	brne	.-4      	; 0x44c <lcd_wr_char+0x20>
 450:	00 c0       	rjmp	.+0      	; 0x452 <lcd_wr_char+0x26>
 452:	00 00       	nop
	_delay_ms(5);										// Delay
	cbit( lcd_control_port_reg, EN_pin );				// Clear Enable Pin
 454:	29 98       	cbi	0x05, 1	; 5
	
	alpha_num_char = (alpha_num_char & 0x0F);
	alpha_num_char = (alpha_num_char << 4);
	lcd_data_port_reg &= 0x0F;
 456:	8b b1       	in	r24, 0x0b	; 11
 458:	8f 70       	andi	r24, 0x0F	; 15
 45a:	8b b9       	out	0x0b, r24	; 11
	lcd_data_port_reg |= alpha_num_char;
 45c:	8b b1       	in	r24, 0x0b	; 11
 45e:	c2 95       	swap	r28
 460:	c0 7f       	andi	r28, 0xF0	; 240
 462:	c8 2b       	or	r28, r24
 464:	cb b9       	out	0x0b, r28	; 11
	
	sbit( lcd_control_port_reg, RS_pin );				// RS = 0 --- Data Input
 466:	28 9a       	sbi	0x05, 0	; 5
	cbit( lcd_control_port_reg, RW_pin );				// RW = 0 --- Writing to LCD
 468:	2a 98       	cbi	0x05, 2	; 5
	sbit( lcd_control_port_reg, EN_pin );				// Set Enable Pin
 46a:	29 9a       	sbi	0x05, 1	; 5
 46c:	8f e1       	ldi	r24, 0x1F	; 31
 46e:	9e e4       	ldi	r25, 0x4E	; 78
 470:	01 97       	sbiw	r24, 0x01	; 1
 472:	f1 f7       	brne	.-4      	; 0x470 <lcd_wr_char+0x44>
 474:	00 c0       	rjmp	.+0      	; 0x476 <lcd_wr_char+0x4a>
 476:	00 00       	nop
	_delay_ms(5);										// Delay
	cbit( lcd_control_port_reg, EN_pin );				// Clear Enable Pin
 478:	29 98       	cbi	0x05, 1	; 5
}
 47a:	cf 91       	pop	r28
 47c:	08 95       	ret

0000047e <lcd_string>:
 * Output: This function prints the given string on the LCD at the specified (row, column) position
 * Logic: Positions the cursor and prints each character on LCD in a while loop until EOF is reached
 * Example Call: lcd_string(1, 1, "Hello !");
 */
void lcd_string(char row, char column, char *str)
{
 47e:	0f 93       	push	r16
 480:	1f 93       	push	r17
 482:	cf 93       	push	r28
 484:	df 93       	push	r29
 486:	d8 2f       	mov	r29, r24
 488:	c6 2f       	mov	r28, r22
 48a:	fa 01       	movw	r30, r20
	while(*str != '\0')
 48c:	40 81       	ld	r20, Z
 48e:	44 23       	and	r20, r20
 490:	61 f0       	breq	.+24     	; 0x4aa <lcd_string+0x2c>
 492:	8f 01       	movw	r16, r30
 494:	0f 5f       	subi	r16, 0xFF	; 255
 496:	1f 4f       	sbci	r17, 0xFF	; 255
	{
		lcd_wr_char(row, column, *str);
 498:	6c 2f       	mov	r22, r28
 49a:	8d 2f       	mov	r24, r29
 49c:	c7 df       	rcall	.-114    	; 0x42c <lcd_wr_char>
		str++;
		column+=1;
 49e:	cf 5f       	subi	r28, 0xFF	; 255
 * Logic: Positions the cursor and prints each character on LCD in a while loop until EOF is reached
 * Example Call: lcd_string(1, 1, "Hello !");
 */
void lcd_string(char row, char column, char *str)
{
	while(*str != '\0')
 4a0:	f8 01       	movw	r30, r16
 4a2:	41 91       	ld	r20, Z+
 4a4:	8f 01       	movw	r16, r30
 4a6:	41 11       	cpse	r20, r1
 4a8:	f7 cf       	rjmp	.-18     	; 0x498 <lcd_string+0x1a>
	{
		lcd_wr_char(row, column, *str);
		str++;
		column+=1;
	}
}
 4aa:	df 91       	pop	r29
 4ac:	cf 91       	pop	r28
 4ae:	1f 91       	pop	r17
 4b0:	0f 91       	pop	r16
 4b2:	08 95       	ret

000004b4 <uart_init>:
 * Example Call: uart_tx();
 */
void uart_tx(char data)
{
	//while( ( UCSRA_reg & ( 1 << UDRE_bit ) ) == 0x00 );				// waiting to transmit	
	UDR_reg	= data;
 4b4:	e1 ec       	ldi	r30, 0xC1	; 193
 4b6:	f0 e0       	ldi	r31, 0x00	; 0
 4b8:	10 82       	st	Z, r1
 4ba:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 4be:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
 4c2:	a2 ec       	ldi	r26, 0xC2	; 194
 4c4:	b0 e0       	ldi	r27, 0x00	; 0
 4c6:	8c 91       	ld	r24, X
 4c8:	8f 73       	andi	r24, 0x3F	; 63
 4ca:	8c 93       	st	X, r24
 4cc:	8c 91       	ld	r24, X
 4ce:	86 60       	ori	r24, 0x06	; 6
 4d0:	8c 93       	st	X, r24
 4d2:	80 81       	ld	r24, Z
 4d4:	88 61       	ori	r24, 0x18	; 24
 4d6:	80 83       	st	Z, r24
 4d8:	80 81       	ld	r24, Z
 4da:	8b 7f       	andi	r24, 0xFB	; 251
 4dc:	80 83       	st	Z, r24
 4de:	08 95       	ret

000004e0 <uart_tx_string>:
 * Output: None
 * Logic: This function sends a string over the UART
 * Example Call: uart_tx_string();
 */
void uart_tx_string(char *data)
{
 4e0:	fc 01       	movw	r30, r24
	while(*data != '\0')
 4e2:	90 81       	ld	r25, Z
 4e4:	99 23       	and	r25, r25
 4e6:	39 f0       	breq	.+14     	; 0x4f6 <uart_tx_string+0x16>
 4e8:	31 96       	adiw	r30, 0x01	; 1
 * Example Call: uart_tx();
 */
void uart_tx(char data)
{
	//while( ( UCSRA_reg & ( 1 << UDRE_bit ) ) == 0x00 );				// waiting to transmit	
	UDR_reg	= data;
 4ea:	a6 ec       	ldi	r26, 0xC6	; 198
 4ec:	b0 e0       	ldi	r27, 0x00	; 0
 4ee:	9c 93       	st	X, r25
 * Logic: This function sends a string over the UART
 * Example Call: uart_tx_string();
 */
void uart_tx_string(char *data)
{
	while(*data != '\0')
 4f0:	91 91       	ld	r25, Z+
 4f2:	91 11       	cpse	r25, r1
 4f4:	fc cf       	rjmp	.-8      	; 0x4ee <uart_tx_string+0xe>
 4f6:	08 95       	ret

000004f8 <vfprintf>:
 4f8:	a0 e1       	ldi	r26, 0x10	; 16
 4fa:	b0 e0       	ldi	r27, 0x00	; 0
 4fc:	e1 e8       	ldi	r30, 0x81	; 129
 4fe:	f2 e0       	ldi	r31, 0x02	; 2
 500:	59 c3       	rjmp	.+1714   	; 0xbb4 <__prologue_saves__>
 502:	7c 01       	movw	r14, r24
 504:	1b 01       	movw	r2, r22
 506:	6a 01       	movw	r12, r20
 508:	fc 01       	movw	r30, r24
 50a:	17 82       	std	Z+7, r1	; 0x07
 50c:	16 82       	std	Z+6, r1	; 0x06
 50e:	83 81       	ldd	r24, Z+3	; 0x03
 510:	81 ff       	sbrs	r24, 1
 512:	2a c3       	rjmp	.+1620   	; 0xb68 <__stack+0x269>
 514:	9e 01       	movw	r18, r28
 516:	2f 5f       	subi	r18, 0xFF	; 255
 518:	3f 4f       	sbci	r19, 0xFF	; 255
 51a:	39 01       	movw	r6, r18
 51c:	f7 01       	movw	r30, r14
 51e:	93 81       	ldd	r25, Z+3	; 0x03
 520:	f1 01       	movw	r30, r2
 522:	93 fd       	sbrc	r25, 3
 524:	85 91       	lpm	r24, Z+
 526:	93 ff       	sbrs	r25, 3
 528:	81 91       	ld	r24, Z+
 52a:	1f 01       	movw	r2, r30
 52c:	88 23       	and	r24, r24
 52e:	09 f4       	brne	.+2      	; 0x532 <vfprintf+0x3a>
 530:	17 c3       	rjmp	.+1582   	; 0xb60 <__stack+0x261>
 532:	85 32       	cpi	r24, 0x25	; 37
 534:	39 f4       	brne	.+14     	; 0x544 <vfprintf+0x4c>
 536:	93 fd       	sbrc	r25, 3
 538:	85 91       	lpm	r24, Z+
 53a:	93 ff       	sbrs	r25, 3
 53c:	81 91       	ld	r24, Z+
 53e:	1f 01       	movw	r2, r30
 540:	85 32       	cpi	r24, 0x25	; 37
 542:	31 f4       	brne	.+12     	; 0x550 <vfprintf+0x58>
 544:	b7 01       	movw	r22, r14
 546:	90 e0       	ldi	r25, 0x00	; 0
 548:	5a d4       	rcall	.+2228   	; 0xdfe <fputc>
 54a:	56 01       	movw	r10, r12
 54c:	65 01       	movw	r12, r10
 54e:	e6 cf       	rjmp	.-52     	; 0x51c <vfprintf+0x24>
 550:	10 e0       	ldi	r17, 0x00	; 0
 552:	51 2c       	mov	r5, r1
 554:	91 2c       	mov	r9, r1
 556:	ff e1       	ldi	r31, 0x1F	; 31
 558:	f9 15       	cp	r31, r9
 55a:	d8 f0       	brcs	.+54     	; 0x592 <vfprintf+0x9a>
 55c:	8b 32       	cpi	r24, 0x2B	; 43
 55e:	79 f0       	breq	.+30     	; 0x57e <vfprintf+0x86>
 560:	38 f4       	brcc	.+14     	; 0x570 <vfprintf+0x78>
 562:	80 32       	cpi	r24, 0x20	; 32
 564:	79 f0       	breq	.+30     	; 0x584 <vfprintf+0x8c>
 566:	83 32       	cpi	r24, 0x23	; 35
 568:	a1 f4       	brne	.+40     	; 0x592 <vfprintf+0x9a>
 56a:	f9 2d       	mov	r31, r9
 56c:	f0 61       	ori	r31, 0x10	; 16
 56e:	2e c0       	rjmp	.+92     	; 0x5cc <vfprintf+0xd4>
 570:	8d 32       	cpi	r24, 0x2D	; 45
 572:	61 f0       	breq	.+24     	; 0x58c <vfprintf+0x94>
 574:	80 33       	cpi	r24, 0x30	; 48
 576:	69 f4       	brne	.+26     	; 0x592 <vfprintf+0x9a>
 578:	29 2d       	mov	r18, r9
 57a:	21 60       	ori	r18, 0x01	; 1
 57c:	2d c0       	rjmp	.+90     	; 0x5d8 <vfprintf+0xe0>
 57e:	39 2d       	mov	r19, r9
 580:	32 60       	ori	r19, 0x02	; 2
 582:	93 2e       	mov	r9, r19
 584:	89 2d       	mov	r24, r9
 586:	84 60       	ori	r24, 0x04	; 4
 588:	98 2e       	mov	r9, r24
 58a:	2a c0       	rjmp	.+84     	; 0x5e0 <vfprintf+0xe8>
 58c:	e9 2d       	mov	r30, r9
 58e:	e8 60       	ori	r30, 0x08	; 8
 590:	15 c0       	rjmp	.+42     	; 0x5bc <vfprintf+0xc4>
 592:	97 fc       	sbrc	r9, 7
 594:	2d c0       	rjmp	.+90     	; 0x5f0 <vfprintf+0xf8>
 596:	20 ed       	ldi	r18, 0xD0	; 208
 598:	28 0f       	add	r18, r24
 59a:	2a 30       	cpi	r18, 0x0A	; 10
 59c:	88 f4       	brcc	.+34     	; 0x5c0 <vfprintf+0xc8>
 59e:	96 fe       	sbrs	r9, 6
 5a0:	06 c0       	rjmp	.+12     	; 0x5ae <vfprintf+0xb6>
 5a2:	3a e0       	ldi	r19, 0x0A	; 10
 5a4:	13 9f       	mul	r17, r19
 5a6:	20 0d       	add	r18, r0
 5a8:	11 24       	eor	r1, r1
 5aa:	12 2f       	mov	r17, r18
 5ac:	19 c0       	rjmp	.+50     	; 0x5e0 <vfprintf+0xe8>
 5ae:	8a e0       	ldi	r24, 0x0A	; 10
 5b0:	58 9e       	mul	r5, r24
 5b2:	20 0d       	add	r18, r0
 5b4:	11 24       	eor	r1, r1
 5b6:	52 2e       	mov	r5, r18
 5b8:	e9 2d       	mov	r30, r9
 5ba:	e0 62       	ori	r30, 0x20	; 32
 5bc:	9e 2e       	mov	r9, r30
 5be:	10 c0       	rjmp	.+32     	; 0x5e0 <vfprintf+0xe8>
 5c0:	8e 32       	cpi	r24, 0x2E	; 46
 5c2:	31 f4       	brne	.+12     	; 0x5d0 <vfprintf+0xd8>
 5c4:	96 fc       	sbrc	r9, 6
 5c6:	cc c2       	rjmp	.+1432   	; 0xb60 <__stack+0x261>
 5c8:	f9 2d       	mov	r31, r9
 5ca:	f0 64       	ori	r31, 0x40	; 64
 5cc:	9f 2e       	mov	r9, r31
 5ce:	08 c0       	rjmp	.+16     	; 0x5e0 <vfprintf+0xe8>
 5d0:	8c 36       	cpi	r24, 0x6C	; 108
 5d2:	21 f4       	brne	.+8      	; 0x5dc <vfprintf+0xe4>
 5d4:	29 2d       	mov	r18, r9
 5d6:	20 68       	ori	r18, 0x80	; 128
 5d8:	92 2e       	mov	r9, r18
 5da:	02 c0       	rjmp	.+4      	; 0x5e0 <vfprintf+0xe8>
 5dc:	88 36       	cpi	r24, 0x68	; 104
 5de:	41 f4       	brne	.+16     	; 0x5f0 <vfprintf+0xf8>
 5e0:	f1 01       	movw	r30, r2
 5e2:	93 fd       	sbrc	r25, 3
 5e4:	85 91       	lpm	r24, Z+
 5e6:	93 ff       	sbrs	r25, 3
 5e8:	81 91       	ld	r24, Z+
 5ea:	1f 01       	movw	r2, r30
 5ec:	81 11       	cpse	r24, r1
 5ee:	b3 cf       	rjmp	.-154    	; 0x556 <vfprintf+0x5e>
 5f0:	9b eb       	ldi	r25, 0xBB	; 187
 5f2:	98 0f       	add	r25, r24
 5f4:	93 30       	cpi	r25, 0x03	; 3
 5f6:	20 f4       	brcc	.+8      	; 0x600 <vfprintf+0x108>
 5f8:	99 2d       	mov	r25, r9
 5fa:	90 61       	ori	r25, 0x10	; 16
 5fc:	80 5e       	subi	r24, 0xE0	; 224
 5fe:	07 c0       	rjmp	.+14     	; 0x60e <vfprintf+0x116>
 600:	9b e9       	ldi	r25, 0x9B	; 155
 602:	98 0f       	add	r25, r24
 604:	93 30       	cpi	r25, 0x03	; 3
 606:	08 f0       	brcs	.+2      	; 0x60a <vfprintf+0x112>
 608:	59 c1       	rjmp	.+690    	; 0x8bc <__DATA_REGION_LENGTH__+0xbc>
 60a:	99 2d       	mov	r25, r9
 60c:	9f 7e       	andi	r25, 0xEF	; 239
 60e:	96 ff       	sbrs	r25, 6
 610:	16 e0       	ldi	r17, 0x06	; 6
 612:	9f 73       	andi	r25, 0x3F	; 63
 614:	99 2e       	mov	r9, r25
 616:	85 36       	cpi	r24, 0x65	; 101
 618:	19 f4       	brne	.+6      	; 0x620 <vfprintf+0x128>
 61a:	90 64       	ori	r25, 0x40	; 64
 61c:	99 2e       	mov	r9, r25
 61e:	08 c0       	rjmp	.+16     	; 0x630 <vfprintf+0x138>
 620:	86 36       	cpi	r24, 0x66	; 102
 622:	21 f4       	brne	.+8      	; 0x62c <vfprintf+0x134>
 624:	39 2f       	mov	r19, r25
 626:	30 68       	ori	r19, 0x80	; 128
 628:	93 2e       	mov	r9, r19
 62a:	02 c0       	rjmp	.+4      	; 0x630 <vfprintf+0x138>
 62c:	11 11       	cpse	r17, r1
 62e:	11 50       	subi	r17, 0x01	; 1
 630:	97 fe       	sbrs	r9, 7
 632:	07 c0       	rjmp	.+14     	; 0x642 <vfprintf+0x14a>
 634:	1c 33       	cpi	r17, 0x3C	; 60
 636:	50 f4       	brcc	.+20     	; 0x64c <vfprintf+0x154>
 638:	44 24       	eor	r4, r4
 63a:	43 94       	inc	r4
 63c:	41 0e       	add	r4, r17
 63e:	27 e0       	ldi	r18, 0x07	; 7
 640:	0b c0       	rjmp	.+22     	; 0x658 <vfprintf+0x160>
 642:	18 30       	cpi	r17, 0x08	; 8
 644:	38 f0       	brcs	.+14     	; 0x654 <vfprintf+0x15c>
 646:	27 e0       	ldi	r18, 0x07	; 7
 648:	17 e0       	ldi	r17, 0x07	; 7
 64a:	05 c0       	rjmp	.+10     	; 0x656 <vfprintf+0x15e>
 64c:	27 e0       	ldi	r18, 0x07	; 7
 64e:	9c e3       	ldi	r25, 0x3C	; 60
 650:	49 2e       	mov	r4, r25
 652:	02 c0       	rjmp	.+4      	; 0x658 <vfprintf+0x160>
 654:	21 2f       	mov	r18, r17
 656:	41 2c       	mov	r4, r1
 658:	56 01       	movw	r10, r12
 65a:	84 e0       	ldi	r24, 0x04	; 4
 65c:	a8 0e       	add	r10, r24
 65e:	b1 1c       	adc	r11, r1
 660:	f6 01       	movw	r30, r12
 662:	60 81       	ld	r22, Z
 664:	71 81       	ldd	r23, Z+1	; 0x01
 666:	82 81       	ldd	r24, Z+2	; 0x02
 668:	93 81       	ldd	r25, Z+3	; 0x03
 66a:	04 2d       	mov	r16, r4
 66c:	a3 01       	movw	r20, r6
 66e:	d9 d2       	rcall	.+1458   	; 0xc22 <__ftoa_engine>
 670:	6c 01       	movw	r12, r24
 672:	f9 81       	ldd	r31, Y+1	; 0x01
 674:	fc 87       	std	Y+12, r31	; 0x0c
 676:	f0 ff       	sbrs	r31, 0
 678:	02 c0       	rjmp	.+4      	; 0x67e <vfprintf+0x186>
 67a:	f3 ff       	sbrs	r31, 3
 67c:	06 c0       	rjmp	.+12     	; 0x68a <vfprintf+0x192>
 67e:	91 fc       	sbrc	r9, 1
 680:	06 c0       	rjmp	.+12     	; 0x68e <vfprintf+0x196>
 682:	92 fe       	sbrs	r9, 2
 684:	06 c0       	rjmp	.+12     	; 0x692 <vfprintf+0x19a>
 686:	00 e2       	ldi	r16, 0x20	; 32
 688:	05 c0       	rjmp	.+10     	; 0x694 <vfprintf+0x19c>
 68a:	0d e2       	ldi	r16, 0x2D	; 45
 68c:	03 c0       	rjmp	.+6      	; 0x694 <vfprintf+0x19c>
 68e:	0b e2       	ldi	r16, 0x2B	; 43
 690:	01 c0       	rjmp	.+2      	; 0x694 <vfprintf+0x19c>
 692:	00 e0       	ldi	r16, 0x00	; 0
 694:	8c 85       	ldd	r24, Y+12	; 0x0c
 696:	8c 70       	andi	r24, 0x0C	; 12
 698:	19 f0       	breq	.+6      	; 0x6a0 <vfprintf+0x1a8>
 69a:	01 11       	cpse	r16, r1
 69c:	43 c2       	rjmp	.+1158   	; 0xb24 <__stack+0x225>
 69e:	80 c2       	rjmp	.+1280   	; 0xba0 <__stack+0x2a1>
 6a0:	97 fe       	sbrs	r9, 7
 6a2:	10 c0       	rjmp	.+32     	; 0x6c4 <vfprintf+0x1cc>
 6a4:	4c 0c       	add	r4, r12
 6a6:	fc 85       	ldd	r31, Y+12	; 0x0c
 6a8:	f4 ff       	sbrs	r31, 4
 6aa:	04 c0       	rjmp	.+8      	; 0x6b4 <vfprintf+0x1bc>
 6ac:	8a 81       	ldd	r24, Y+2	; 0x02
 6ae:	81 33       	cpi	r24, 0x31	; 49
 6b0:	09 f4       	brne	.+2      	; 0x6b4 <vfprintf+0x1bc>
 6b2:	4a 94       	dec	r4
 6b4:	14 14       	cp	r1, r4
 6b6:	74 f5       	brge	.+92     	; 0x714 <vfprintf+0x21c>
 6b8:	28 e0       	ldi	r18, 0x08	; 8
 6ba:	24 15       	cp	r18, r4
 6bc:	78 f5       	brcc	.+94     	; 0x71c <vfprintf+0x224>
 6be:	88 e0       	ldi	r24, 0x08	; 8
 6c0:	48 2e       	mov	r4, r24
 6c2:	2c c0       	rjmp	.+88     	; 0x71c <vfprintf+0x224>
 6c4:	96 fc       	sbrc	r9, 6
 6c6:	2a c0       	rjmp	.+84     	; 0x71c <vfprintf+0x224>
 6c8:	81 2f       	mov	r24, r17
 6ca:	90 e0       	ldi	r25, 0x00	; 0
 6cc:	8c 15       	cp	r24, r12
 6ce:	9d 05       	cpc	r25, r13
 6d0:	9c f0       	brlt	.+38     	; 0x6f8 <vfprintf+0x200>
 6d2:	3c ef       	ldi	r19, 0xFC	; 252
 6d4:	c3 16       	cp	r12, r19
 6d6:	3f ef       	ldi	r19, 0xFF	; 255
 6d8:	d3 06       	cpc	r13, r19
 6da:	74 f0       	brlt	.+28     	; 0x6f8 <vfprintf+0x200>
 6dc:	89 2d       	mov	r24, r9
 6de:	80 68       	ori	r24, 0x80	; 128
 6e0:	98 2e       	mov	r9, r24
 6e2:	0a c0       	rjmp	.+20     	; 0x6f8 <vfprintf+0x200>
 6e4:	e2 e0       	ldi	r30, 0x02	; 2
 6e6:	f0 e0       	ldi	r31, 0x00	; 0
 6e8:	ec 0f       	add	r30, r28
 6ea:	fd 1f       	adc	r31, r29
 6ec:	e1 0f       	add	r30, r17
 6ee:	f1 1d       	adc	r31, r1
 6f0:	80 81       	ld	r24, Z
 6f2:	80 33       	cpi	r24, 0x30	; 48
 6f4:	19 f4       	brne	.+6      	; 0x6fc <vfprintf+0x204>
 6f6:	11 50       	subi	r17, 0x01	; 1
 6f8:	11 11       	cpse	r17, r1
 6fa:	f4 cf       	rjmp	.-24     	; 0x6e4 <vfprintf+0x1ec>
 6fc:	97 fe       	sbrs	r9, 7
 6fe:	0e c0       	rjmp	.+28     	; 0x71c <vfprintf+0x224>
 700:	44 24       	eor	r4, r4
 702:	43 94       	inc	r4
 704:	41 0e       	add	r4, r17
 706:	81 2f       	mov	r24, r17
 708:	90 e0       	ldi	r25, 0x00	; 0
 70a:	c8 16       	cp	r12, r24
 70c:	d9 06       	cpc	r13, r25
 70e:	2c f4       	brge	.+10     	; 0x71a <vfprintf+0x222>
 710:	1c 19       	sub	r17, r12
 712:	04 c0       	rjmp	.+8      	; 0x71c <vfprintf+0x224>
 714:	44 24       	eor	r4, r4
 716:	43 94       	inc	r4
 718:	01 c0       	rjmp	.+2      	; 0x71c <vfprintf+0x224>
 71a:	10 e0       	ldi	r17, 0x00	; 0
 71c:	97 fe       	sbrs	r9, 7
 71e:	06 c0       	rjmp	.+12     	; 0x72c <vfprintf+0x234>
 720:	1c 14       	cp	r1, r12
 722:	1d 04       	cpc	r1, r13
 724:	34 f4       	brge	.+12     	; 0x732 <vfprintf+0x23a>
 726:	c6 01       	movw	r24, r12
 728:	01 96       	adiw	r24, 0x01	; 1
 72a:	05 c0       	rjmp	.+10     	; 0x736 <vfprintf+0x23e>
 72c:	85 e0       	ldi	r24, 0x05	; 5
 72e:	90 e0       	ldi	r25, 0x00	; 0
 730:	02 c0       	rjmp	.+4      	; 0x736 <vfprintf+0x23e>
 732:	81 e0       	ldi	r24, 0x01	; 1
 734:	90 e0       	ldi	r25, 0x00	; 0
 736:	01 11       	cpse	r16, r1
 738:	01 96       	adiw	r24, 0x01	; 1
 73a:	11 23       	and	r17, r17
 73c:	31 f0       	breq	.+12     	; 0x74a <vfprintf+0x252>
 73e:	21 2f       	mov	r18, r17
 740:	30 e0       	ldi	r19, 0x00	; 0
 742:	2f 5f       	subi	r18, 0xFF	; 255
 744:	3f 4f       	sbci	r19, 0xFF	; 255
 746:	82 0f       	add	r24, r18
 748:	93 1f       	adc	r25, r19
 74a:	25 2d       	mov	r18, r5
 74c:	30 e0       	ldi	r19, 0x00	; 0
 74e:	82 17       	cp	r24, r18
 750:	93 07       	cpc	r25, r19
 752:	14 f4       	brge	.+4      	; 0x758 <vfprintf+0x260>
 754:	58 1a       	sub	r5, r24
 756:	01 c0       	rjmp	.+2      	; 0x75a <vfprintf+0x262>
 758:	51 2c       	mov	r5, r1
 75a:	89 2d       	mov	r24, r9
 75c:	89 70       	andi	r24, 0x09	; 9
 75e:	41 f4       	brne	.+16     	; 0x770 <vfprintf+0x278>
 760:	55 20       	and	r5, r5
 762:	31 f0       	breq	.+12     	; 0x770 <vfprintf+0x278>
 764:	b7 01       	movw	r22, r14
 766:	80 e2       	ldi	r24, 0x20	; 32
 768:	90 e0       	ldi	r25, 0x00	; 0
 76a:	49 d3       	rcall	.+1682   	; 0xdfe <fputc>
 76c:	5a 94       	dec	r5
 76e:	f8 cf       	rjmp	.-16     	; 0x760 <vfprintf+0x268>
 770:	00 23       	and	r16, r16
 772:	21 f0       	breq	.+8      	; 0x77c <vfprintf+0x284>
 774:	b7 01       	movw	r22, r14
 776:	80 2f       	mov	r24, r16
 778:	90 e0       	ldi	r25, 0x00	; 0
 77a:	41 d3       	rcall	.+1666   	; 0xdfe <fputc>
 77c:	93 fc       	sbrc	r9, 3
 77e:	08 c0       	rjmp	.+16     	; 0x790 <vfprintf+0x298>
 780:	55 20       	and	r5, r5
 782:	31 f0       	breq	.+12     	; 0x790 <vfprintf+0x298>
 784:	b7 01       	movw	r22, r14
 786:	80 e3       	ldi	r24, 0x30	; 48
 788:	90 e0       	ldi	r25, 0x00	; 0
 78a:	39 d3       	rcall	.+1650   	; 0xdfe <fputc>
 78c:	5a 94       	dec	r5
 78e:	f8 cf       	rjmp	.-16     	; 0x780 <vfprintf+0x288>
 790:	97 fe       	sbrs	r9, 7
 792:	4a c0       	rjmp	.+148    	; 0x828 <__DATA_REGION_LENGTH__+0x28>
 794:	46 01       	movw	r8, r12
 796:	d7 fe       	sbrs	r13, 7
 798:	02 c0       	rjmp	.+4      	; 0x79e <vfprintf+0x2a6>
 79a:	81 2c       	mov	r8, r1
 79c:	91 2c       	mov	r9, r1
 79e:	c6 01       	movw	r24, r12
 7a0:	88 19       	sub	r24, r8
 7a2:	99 09       	sbc	r25, r9
 7a4:	f3 01       	movw	r30, r6
 7a6:	e8 0f       	add	r30, r24
 7a8:	f9 1f       	adc	r31, r25
 7aa:	fe 87       	std	Y+14, r31	; 0x0e
 7ac:	ed 87       	std	Y+13, r30	; 0x0d
 7ae:	96 01       	movw	r18, r12
 7b0:	24 19       	sub	r18, r4
 7b2:	31 09       	sbc	r19, r1
 7b4:	38 8b       	std	Y+16, r19	; 0x10
 7b6:	2f 87       	std	Y+15, r18	; 0x0f
 7b8:	01 2f       	mov	r16, r17
 7ba:	10 e0       	ldi	r17, 0x00	; 0
 7bc:	11 95       	neg	r17
 7be:	01 95       	neg	r16
 7c0:	11 09       	sbc	r17, r1
 7c2:	3f ef       	ldi	r19, 0xFF	; 255
 7c4:	83 16       	cp	r8, r19
 7c6:	93 06       	cpc	r9, r19
 7c8:	21 f4       	brne	.+8      	; 0x7d2 <vfprintf+0x2da>
 7ca:	b7 01       	movw	r22, r14
 7cc:	8e e2       	ldi	r24, 0x2E	; 46
 7ce:	90 e0       	ldi	r25, 0x00	; 0
 7d0:	16 d3       	rcall	.+1580   	; 0xdfe <fputc>
 7d2:	c8 14       	cp	r12, r8
 7d4:	d9 04       	cpc	r13, r9
 7d6:	4c f0       	brlt	.+18     	; 0x7ea <vfprintf+0x2f2>
 7d8:	8f 85       	ldd	r24, Y+15	; 0x0f
 7da:	98 89       	ldd	r25, Y+16	; 0x10
 7dc:	88 15       	cp	r24, r8
 7de:	99 05       	cpc	r25, r9
 7e0:	24 f4       	brge	.+8      	; 0x7ea <vfprintf+0x2f2>
 7e2:	ed 85       	ldd	r30, Y+13	; 0x0d
 7e4:	fe 85       	ldd	r31, Y+14	; 0x0e
 7e6:	81 81       	ldd	r24, Z+1	; 0x01
 7e8:	01 c0       	rjmp	.+2      	; 0x7ec <vfprintf+0x2f4>
 7ea:	80 e3       	ldi	r24, 0x30	; 48
 7ec:	f1 e0       	ldi	r31, 0x01	; 1
 7ee:	8f 1a       	sub	r8, r31
 7f0:	91 08       	sbc	r9, r1
 7f2:	2d 85       	ldd	r18, Y+13	; 0x0d
 7f4:	3e 85       	ldd	r19, Y+14	; 0x0e
 7f6:	2f 5f       	subi	r18, 0xFF	; 255
 7f8:	3f 4f       	sbci	r19, 0xFF	; 255
 7fa:	3e 87       	std	Y+14, r19	; 0x0e
 7fc:	2d 87       	std	Y+13, r18	; 0x0d
 7fe:	80 16       	cp	r8, r16
 800:	91 06       	cpc	r9, r17
 802:	24 f0       	brlt	.+8      	; 0x80c <__DATA_REGION_LENGTH__+0xc>
 804:	b7 01       	movw	r22, r14
 806:	90 e0       	ldi	r25, 0x00	; 0
 808:	fa d2       	rcall	.+1524   	; 0xdfe <fputc>
 80a:	db cf       	rjmp	.-74     	; 0x7c2 <vfprintf+0x2ca>
 80c:	c8 14       	cp	r12, r8
 80e:	d9 04       	cpc	r13, r9
 810:	41 f4       	brne	.+16     	; 0x822 <__DATA_REGION_LENGTH__+0x22>
 812:	9a 81       	ldd	r25, Y+2	; 0x02
 814:	96 33       	cpi	r25, 0x36	; 54
 816:	20 f4       	brcc	.+8      	; 0x820 <__DATA_REGION_LENGTH__+0x20>
 818:	95 33       	cpi	r25, 0x35	; 53
 81a:	19 f4       	brne	.+6      	; 0x822 <__DATA_REGION_LENGTH__+0x22>
 81c:	3c 85       	ldd	r19, Y+12	; 0x0c
 81e:	34 ff       	sbrs	r19, 4
 820:	81 e3       	ldi	r24, 0x31	; 49
 822:	b7 01       	movw	r22, r14
 824:	90 e0       	ldi	r25, 0x00	; 0
 826:	48 c0       	rjmp	.+144    	; 0x8b8 <__DATA_REGION_LENGTH__+0xb8>
 828:	8a 81       	ldd	r24, Y+2	; 0x02
 82a:	81 33       	cpi	r24, 0x31	; 49
 82c:	19 f0       	breq	.+6      	; 0x834 <__DATA_REGION_LENGTH__+0x34>
 82e:	9c 85       	ldd	r25, Y+12	; 0x0c
 830:	9f 7e       	andi	r25, 0xEF	; 239
 832:	9c 87       	std	Y+12, r25	; 0x0c
 834:	b7 01       	movw	r22, r14
 836:	90 e0       	ldi	r25, 0x00	; 0
 838:	e2 d2       	rcall	.+1476   	; 0xdfe <fputc>
 83a:	11 11       	cpse	r17, r1
 83c:	05 c0       	rjmp	.+10     	; 0x848 <__DATA_REGION_LENGTH__+0x48>
 83e:	94 fc       	sbrc	r9, 4
 840:	16 c0       	rjmp	.+44     	; 0x86e <__DATA_REGION_LENGTH__+0x6e>
 842:	85 e6       	ldi	r24, 0x65	; 101
 844:	90 e0       	ldi	r25, 0x00	; 0
 846:	15 c0       	rjmp	.+42     	; 0x872 <__DATA_REGION_LENGTH__+0x72>
 848:	b7 01       	movw	r22, r14
 84a:	8e e2       	ldi	r24, 0x2E	; 46
 84c:	90 e0       	ldi	r25, 0x00	; 0
 84e:	d7 d2       	rcall	.+1454   	; 0xdfe <fputc>
 850:	1e 5f       	subi	r17, 0xFE	; 254
 852:	82 e0       	ldi	r24, 0x02	; 2
 854:	01 e0       	ldi	r16, 0x01	; 1
 856:	08 0f       	add	r16, r24
 858:	f3 01       	movw	r30, r6
 85a:	e8 0f       	add	r30, r24
 85c:	f1 1d       	adc	r31, r1
 85e:	80 81       	ld	r24, Z
 860:	b7 01       	movw	r22, r14
 862:	90 e0       	ldi	r25, 0x00	; 0
 864:	cc d2       	rcall	.+1432   	; 0xdfe <fputc>
 866:	80 2f       	mov	r24, r16
 868:	01 13       	cpse	r16, r17
 86a:	f4 cf       	rjmp	.-24     	; 0x854 <__DATA_REGION_LENGTH__+0x54>
 86c:	e8 cf       	rjmp	.-48     	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 86e:	85 e4       	ldi	r24, 0x45	; 69
 870:	90 e0       	ldi	r25, 0x00	; 0
 872:	b7 01       	movw	r22, r14
 874:	c4 d2       	rcall	.+1416   	; 0xdfe <fputc>
 876:	d7 fc       	sbrc	r13, 7
 878:	06 c0       	rjmp	.+12     	; 0x886 <__DATA_REGION_LENGTH__+0x86>
 87a:	c1 14       	cp	r12, r1
 87c:	d1 04       	cpc	r13, r1
 87e:	41 f4       	brne	.+16     	; 0x890 <__DATA_REGION_LENGTH__+0x90>
 880:	ec 85       	ldd	r30, Y+12	; 0x0c
 882:	e4 ff       	sbrs	r30, 4
 884:	05 c0       	rjmp	.+10     	; 0x890 <__DATA_REGION_LENGTH__+0x90>
 886:	d1 94       	neg	r13
 888:	c1 94       	neg	r12
 88a:	d1 08       	sbc	r13, r1
 88c:	8d e2       	ldi	r24, 0x2D	; 45
 88e:	01 c0       	rjmp	.+2      	; 0x892 <__DATA_REGION_LENGTH__+0x92>
 890:	8b e2       	ldi	r24, 0x2B	; 43
 892:	b7 01       	movw	r22, r14
 894:	90 e0       	ldi	r25, 0x00	; 0
 896:	b3 d2       	rcall	.+1382   	; 0xdfe <fputc>
 898:	80 e3       	ldi	r24, 0x30	; 48
 89a:	2a e0       	ldi	r18, 0x0A	; 10
 89c:	c2 16       	cp	r12, r18
 89e:	d1 04       	cpc	r13, r1
 8a0:	2c f0       	brlt	.+10     	; 0x8ac <__DATA_REGION_LENGTH__+0xac>
 8a2:	8f 5f       	subi	r24, 0xFF	; 255
 8a4:	fa e0       	ldi	r31, 0x0A	; 10
 8a6:	cf 1a       	sub	r12, r31
 8a8:	d1 08       	sbc	r13, r1
 8aa:	f7 cf       	rjmp	.-18     	; 0x89a <__DATA_REGION_LENGTH__+0x9a>
 8ac:	b7 01       	movw	r22, r14
 8ae:	90 e0       	ldi	r25, 0x00	; 0
 8b0:	a6 d2       	rcall	.+1356   	; 0xdfe <fputc>
 8b2:	b7 01       	movw	r22, r14
 8b4:	c6 01       	movw	r24, r12
 8b6:	c0 96       	adiw	r24, 0x30	; 48
 8b8:	a2 d2       	rcall	.+1348   	; 0xdfe <fputc>
 8ba:	49 c1       	rjmp	.+658    	; 0xb4e <__stack+0x24f>
 8bc:	83 36       	cpi	r24, 0x63	; 99
 8be:	31 f0       	breq	.+12     	; 0x8cc <__DATA_REGION_LENGTH__+0xcc>
 8c0:	83 37       	cpi	r24, 0x73	; 115
 8c2:	79 f0       	breq	.+30     	; 0x8e2 <__DATA_REGION_LENGTH__+0xe2>
 8c4:	83 35       	cpi	r24, 0x53	; 83
 8c6:	09 f0       	breq	.+2      	; 0x8ca <__DATA_REGION_LENGTH__+0xca>
 8c8:	52 c0       	rjmp	.+164    	; 0x96e <__stack+0x6f>
 8ca:	1f c0       	rjmp	.+62     	; 0x90a <__stack+0xb>
 8cc:	56 01       	movw	r10, r12
 8ce:	32 e0       	ldi	r19, 0x02	; 2
 8d0:	a3 0e       	add	r10, r19
 8d2:	b1 1c       	adc	r11, r1
 8d4:	f6 01       	movw	r30, r12
 8d6:	80 81       	ld	r24, Z
 8d8:	89 83       	std	Y+1, r24	; 0x01
 8da:	01 e0       	ldi	r16, 0x01	; 1
 8dc:	10 e0       	ldi	r17, 0x00	; 0
 8de:	63 01       	movw	r12, r6
 8e0:	11 c0       	rjmp	.+34     	; 0x904 <__stack+0x5>
 8e2:	56 01       	movw	r10, r12
 8e4:	f2 e0       	ldi	r31, 0x02	; 2
 8e6:	af 0e       	add	r10, r31
 8e8:	b1 1c       	adc	r11, r1
 8ea:	f6 01       	movw	r30, r12
 8ec:	c0 80       	ld	r12, Z
 8ee:	d1 80       	ldd	r13, Z+1	; 0x01
 8f0:	96 fe       	sbrs	r9, 6
 8f2:	03 c0       	rjmp	.+6      	; 0x8fa <__DATA_REGION_LENGTH__+0xfa>
 8f4:	61 2f       	mov	r22, r17
 8f6:	70 e0       	ldi	r23, 0x00	; 0
 8f8:	02 c0       	rjmp	.+4      	; 0x8fe <__DATA_REGION_LENGTH__+0xfe>
 8fa:	6f ef       	ldi	r22, 0xFF	; 255
 8fc:	7f ef       	ldi	r23, 0xFF	; 255
 8fe:	c6 01       	movw	r24, r12
 900:	73 d2       	rcall	.+1254   	; 0xde8 <strnlen>
 902:	8c 01       	movw	r16, r24
 904:	f9 2d       	mov	r31, r9
 906:	ff 77       	andi	r31, 0x7F	; 127
 908:	13 c0       	rjmp	.+38     	; 0x930 <__stack+0x31>
 90a:	56 01       	movw	r10, r12
 90c:	22 e0       	ldi	r18, 0x02	; 2
 90e:	a2 0e       	add	r10, r18
 910:	b1 1c       	adc	r11, r1
 912:	f6 01       	movw	r30, r12
 914:	c0 80       	ld	r12, Z
 916:	d1 80       	ldd	r13, Z+1	; 0x01
 918:	96 fe       	sbrs	r9, 6
 91a:	03 c0       	rjmp	.+6      	; 0x922 <__stack+0x23>
 91c:	61 2f       	mov	r22, r17
 91e:	70 e0       	ldi	r23, 0x00	; 0
 920:	02 c0       	rjmp	.+4      	; 0x926 <__stack+0x27>
 922:	6f ef       	ldi	r22, 0xFF	; 255
 924:	7f ef       	ldi	r23, 0xFF	; 255
 926:	c6 01       	movw	r24, r12
 928:	54 d2       	rcall	.+1192   	; 0xdd2 <strnlen_P>
 92a:	8c 01       	movw	r16, r24
 92c:	f9 2d       	mov	r31, r9
 92e:	f0 68       	ori	r31, 0x80	; 128
 930:	9f 2e       	mov	r9, r31
 932:	f3 fd       	sbrc	r31, 3
 934:	18 c0       	rjmp	.+48     	; 0x966 <__stack+0x67>
 936:	85 2d       	mov	r24, r5
 938:	90 e0       	ldi	r25, 0x00	; 0
 93a:	08 17       	cp	r16, r24
 93c:	19 07       	cpc	r17, r25
 93e:	98 f4       	brcc	.+38     	; 0x966 <__stack+0x67>
 940:	b7 01       	movw	r22, r14
 942:	80 e2       	ldi	r24, 0x20	; 32
 944:	90 e0       	ldi	r25, 0x00	; 0
 946:	5b d2       	rcall	.+1206   	; 0xdfe <fputc>
 948:	5a 94       	dec	r5
 94a:	f5 cf       	rjmp	.-22     	; 0x936 <__stack+0x37>
 94c:	f6 01       	movw	r30, r12
 94e:	97 fc       	sbrc	r9, 7
 950:	85 91       	lpm	r24, Z+
 952:	97 fe       	sbrs	r9, 7
 954:	81 91       	ld	r24, Z+
 956:	6f 01       	movw	r12, r30
 958:	b7 01       	movw	r22, r14
 95a:	90 e0       	ldi	r25, 0x00	; 0
 95c:	50 d2       	rcall	.+1184   	; 0xdfe <fputc>
 95e:	51 10       	cpse	r5, r1
 960:	5a 94       	dec	r5
 962:	01 50       	subi	r16, 0x01	; 1
 964:	11 09       	sbc	r17, r1
 966:	01 15       	cp	r16, r1
 968:	11 05       	cpc	r17, r1
 96a:	81 f7       	brne	.-32     	; 0x94c <__stack+0x4d>
 96c:	f0 c0       	rjmp	.+480    	; 0xb4e <__stack+0x24f>
 96e:	84 36       	cpi	r24, 0x64	; 100
 970:	11 f0       	breq	.+4      	; 0x976 <__stack+0x77>
 972:	89 36       	cpi	r24, 0x69	; 105
 974:	59 f5       	brne	.+86     	; 0x9cc <__stack+0xcd>
 976:	56 01       	movw	r10, r12
 978:	97 fe       	sbrs	r9, 7
 97a:	09 c0       	rjmp	.+18     	; 0x98e <__stack+0x8f>
 97c:	24 e0       	ldi	r18, 0x04	; 4
 97e:	a2 0e       	add	r10, r18
 980:	b1 1c       	adc	r11, r1
 982:	f6 01       	movw	r30, r12
 984:	60 81       	ld	r22, Z
 986:	71 81       	ldd	r23, Z+1	; 0x01
 988:	82 81       	ldd	r24, Z+2	; 0x02
 98a:	93 81       	ldd	r25, Z+3	; 0x03
 98c:	0a c0       	rjmp	.+20     	; 0x9a2 <__stack+0xa3>
 98e:	f2 e0       	ldi	r31, 0x02	; 2
 990:	af 0e       	add	r10, r31
 992:	b1 1c       	adc	r11, r1
 994:	f6 01       	movw	r30, r12
 996:	60 81       	ld	r22, Z
 998:	71 81       	ldd	r23, Z+1	; 0x01
 99a:	07 2e       	mov	r0, r23
 99c:	00 0c       	add	r0, r0
 99e:	88 0b       	sbc	r24, r24
 9a0:	99 0b       	sbc	r25, r25
 9a2:	f9 2d       	mov	r31, r9
 9a4:	ff 76       	andi	r31, 0x6F	; 111
 9a6:	9f 2e       	mov	r9, r31
 9a8:	97 ff       	sbrs	r25, 7
 9aa:	09 c0       	rjmp	.+18     	; 0x9be <__stack+0xbf>
 9ac:	90 95       	com	r25
 9ae:	80 95       	com	r24
 9b0:	70 95       	com	r23
 9b2:	61 95       	neg	r22
 9b4:	7f 4f       	sbci	r23, 0xFF	; 255
 9b6:	8f 4f       	sbci	r24, 0xFF	; 255
 9b8:	9f 4f       	sbci	r25, 0xFF	; 255
 9ba:	f0 68       	ori	r31, 0x80	; 128
 9bc:	9f 2e       	mov	r9, r31
 9be:	2a e0       	ldi	r18, 0x0A	; 10
 9c0:	30 e0       	ldi	r19, 0x00	; 0
 9c2:	a3 01       	movw	r20, r6
 9c4:	77 d2       	rcall	.+1262   	; 0xeb4 <__ultoa_invert>
 9c6:	c8 2e       	mov	r12, r24
 9c8:	c6 18       	sub	r12, r6
 9ca:	3e c0       	rjmp	.+124    	; 0xa48 <__stack+0x149>
 9cc:	09 2d       	mov	r16, r9
 9ce:	85 37       	cpi	r24, 0x75	; 117
 9d0:	21 f4       	brne	.+8      	; 0x9da <__stack+0xdb>
 9d2:	0f 7e       	andi	r16, 0xEF	; 239
 9d4:	2a e0       	ldi	r18, 0x0A	; 10
 9d6:	30 e0       	ldi	r19, 0x00	; 0
 9d8:	1d c0       	rjmp	.+58     	; 0xa14 <__stack+0x115>
 9da:	09 7f       	andi	r16, 0xF9	; 249
 9dc:	8f 36       	cpi	r24, 0x6F	; 111
 9de:	91 f0       	breq	.+36     	; 0xa04 <__stack+0x105>
 9e0:	18 f4       	brcc	.+6      	; 0x9e8 <__stack+0xe9>
 9e2:	88 35       	cpi	r24, 0x58	; 88
 9e4:	59 f0       	breq	.+22     	; 0x9fc <__stack+0xfd>
 9e6:	bc c0       	rjmp	.+376    	; 0xb60 <__stack+0x261>
 9e8:	80 37       	cpi	r24, 0x70	; 112
 9ea:	19 f0       	breq	.+6      	; 0x9f2 <__stack+0xf3>
 9ec:	88 37       	cpi	r24, 0x78	; 120
 9ee:	11 f0       	breq	.+4      	; 0x9f4 <__stack+0xf5>
 9f0:	b7 c0       	rjmp	.+366    	; 0xb60 <__stack+0x261>
 9f2:	00 61       	ori	r16, 0x10	; 16
 9f4:	04 ff       	sbrs	r16, 4
 9f6:	09 c0       	rjmp	.+18     	; 0xa0a <__stack+0x10b>
 9f8:	04 60       	ori	r16, 0x04	; 4
 9fa:	07 c0       	rjmp	.+14     	; 0xa0a <__stack+0x10b>
 9fc:	94 fe       	sbrs	r9, 4
 9fe:	08 c0       	rjmp	.+16     	; 0xa10 <__stack+0x111>
 a00:	06 60       	ori	r16, 0x06	; 6
 a02:	06 c0       	rjmp	.+12     	; 0xa10 <__stack+0x111>
 a04:	28 e0       	ldi	r18, 0x08	; 8
 a06:	30 e0       	ldi	r19, 0x00	; 0
 a08:	05 c0       	rjmp	.+10     	; 0xa14 <__stack+0x115>
 a0a:	20 e1       	ldi	r18, 0x10	; 16
 a0c:	30 e0       	ldi	r19, 0x00	; 0
 a0e:	02 c0       	rjmp	.+4      	; 0xa14 <__stack+0x115>
 a10:	20 e1       	ldi	r18, 0x10	; 16
 a12:	32 e0       	ldi	r19, 0x02	; 2
 a14:	56 01       	movw	r10, r12
 a16:	07 ff       	sbrs	r16, 7
 a18:	09 c0       	rjmp	.+18     	; 0xa2c <__stack+0x12d>
 a1a:	84 e0       	ldi	r24, 0x04	; 4
 a1c:	a8 0e       	add	r10, r24
 a1e:	b1 1c       	adc	r11, r1
 a20:	f6 01       	movw	r30, r12
 a22:	60 81       	ld	r22, Z
 a24:	71 81       	ldd	r23, Z+1	; 0x01
 a26:	82 81       	ldd	r24, Z+2	; 0x02
 a28:	93 81       	ldd	r25, Z+3	; 0x03
 a2a:	08 c0       	rjmp	.+16     	; 0xa3c <__stack+0x13d>
 a2c:	f2 e0       	ldi	r31, 0x02	; 2
 a2e:	af 0e       	add	r10, r31
 a30:	b1 1c       	adc	r11, r1
 a32:	f6 01       	movw	r30, r12
 a34:	60 81       	ld	r22, Z
 a36:	71 81       	ldd	r23, Z+1	; 0x01
 a38:	80 e0       	ldi	r24, 0x00	; 0
 a3a:	90 e0       	ldi	r25, 0x00	; 0
 a3c:	a3 01       	movw	r20, r6
 a3e:	3a d2       	rcall	.+1140   	; 0xeb4 <__ultoa_invert>
 a40:	c8 2e       	mov	r12, r24
 a42:	c6 18       	sub	r12, r6
 a44:	0f 77       	andi	r16, 0x7F	; 127
 a46:	90 2e       	mov	r9, r16
 a48:	96 fe       	sbrs	r9, 6
 a4a:	0b c0       	rjmp	.+22     	; 0xa62 <__stack+0x163>
 a4c:	09 2d       	mov	r16, r9
 a4e:	0e 7f       	andi	r16, 0xFE	; 254
 a50:	c1 16       	cp	r12, r17
 a52:	50 f4       	brcc	.+20     	; 0xa68 <__stack+0x169>
 a54:	94 fe       	sbrs	r9, 4
 a56:	0a c0       	rjmp	.+20     	; 0xa6c <__stack+0x16d>
 a58:	92 fc       	sbrc	r9, 2
 a5a:	08 c0       	rjmp	.+16     	; 0xa6c <__stack+0x16d>
 a5c:	09 2d       	mov	r16, r9
 a5e:	0e 7e       	andi	r16, 0xEE	; 238
 a60:	05 c0       	rjmp	.+10     	; 0xa6c <__stack+0x16d>
 a62:	dc 2c       	mov	r13, r12
 a64:	09 2d       	mov	r16, r9
 a66:	03 c0       	rjmp	.+6      	; 0xa6e <__stack+0x16f>
 a68:	dc 2c       	mov	r13, r12
 a6a:	01 c0       	rjmp	.+2      	; 0xa6e <__stack+0x16f>
 a6c:	d1 2e       	mov	r13, r17
 a6e:	04 ff       	sbrs	r16, 4
 a70:	0d c0       	rjmp	.+26     	; 0xa8c <__stack+0x18d>
 a72:	fe 01       	movw	r30, r28
 a74:	ec 0d       	add	r30, r12
 a76:	f1 1d       	adc	r31, r1
 a78:	80 81       	ld	r24, Z
 a7a:	80 33       	cpi	r24, 0x30	; 48
 a7c:	11 f4       	brne	.+4      	; 0xa82 <__stack+0x183>
 a7e:	09 7e       	andi	r16, 0xE9	; 233
 a80:	09 c0       	rjmp	.+18     	; 0xa94 <__stack+0x195>
 a82:	02 ff       	sbrs	r16, 2
 a84:	06 c0       	rjmp	.+12     	; 0xa92 <__stack+0x193>
 a86:	d3 94       	inc	r13
 a88:	d3 94       	inc	r13
 a8a:	04 c0       	rjmp	.+8      	; 0xa94 <__stack+0x195>
 a8c:	80 2f       	mov	r24, r16
 a8e:	86 78       	andi	r24, 0x86	; 134
 a90:	09 f0       	breq	.+2      	; 0xa94 <__stack+0x195>
 a92:	d3 94       	inc	r13
 a94:	03 fd       	sbrc	r16, 3
 a96:	10 c0       	rjmp	.+32     	; 0xab8 <__stack+0x1b9>
 a98:	00 ff       	sbrs	r16, 0
 a9a:	06 c0       	rjmp	.+12     	; 0xaa8 <__stack+0x1a9>
 a9c:	1c 2d       	mov	r17, r12
 a9e:	d5 14       	cp	r13, r5
 aa0:	78 f4       	brcc	.+30     	; 0xac0 <__stack+0x1c1>
 aa2:	15 0d       	add	r17, r5
 aa4:	1d 19       	sub	r17, r13
 aa6:	0c c0       	rjmp	.+24     	; 0xac0 <__stack+0x1c1>
 aa8:	d5 14       	cp	r13, r5
 aaa:	50 f4       	brcc	.+20     	; 0xac0 <__stack+0x1c1>
 aac:	b7 01       	movw	r22, r14
 aae:	80 e2       	ldi	r24, 0x20	; 32
 ab0:	90 e0       	ldi	r25, 0x00	; 0
 ab2:	a5 d1       	rcall	.+842    	; 0xdfe <fputc>
 ab4:	d3 94       	inc	r13
 ab6:	f8 cf       	rjmp	.-16     	; 0xaa8 <__stack+0x1a9>
 ab8:	d5 14       	cp	r13, r5
 aba:	10 f4       	brcc	.+4      	; 0xac0 <__stack+0x1c1>
 abc:	5d 18       	sub	r5, r13
 abe:	01 c0       	rjmp	.+2      	; 0xac2 <__stack+0x1c3>
 ac0:	51 2c       	mov	r5, r1
 ac2:	04 ff       	sbrs	r16, 4
 ac4:	0f c0       	rjmp	.+30     	; 0xae4 <__stack+0x1e5>
 ac6:	b7 01       	movw	r22, r14
 ac8:	80 e3       	ldi	r24, 0x30	; 48
 aca:	90 e0       	ldi	r25, 0x00	; 0
 acc:	98 d1       	rcall	.+816    	; 0xdfe <fputc>
 ace:	02 ff       	sbrs	r16, 2
 ad0:	16 c0       	rjmp	.+44     	; 0xafe <__stack+0x1ff>
 ad2:	01 fd       	sbrc	r16, 1
 ad4:	03 c0       	rjmp	.+6      	; 0xadc <__stack+0x1dd>
 ad6:	88 e7       	ldi	r24, 0x78	; 120
 ad8:	90 e0       	ldi	r25, 0x00	; 0
 ada:	02 c0       	rjmp	.+4      	; 0xae0 <__stack+0x1e1>
 adc:	88 e5       	ldi	r24, 0x58	; 88
 ade:	90 e0       	ldi	r25, 0x00	; 0
 ae0:	b7 01       	movw	r22, r14
 ae2:	0c c0       	rjmp	.+24     	; 0xafc <__stack+0x1fd>
 ae4:	80 2f       	mov	r24, r16
 ae6:	86 78       	andi	r24, 0x86	; 134
 ae8:	51 f0       	breq	.+20     	; 0xafe <__stack+0x1ff>
 aea:	01 ff       	sbrs	r16, 1
 aec:	02 c0       	rjmp	.+4      	; 0xaf2 <__stack+0x1f3>
 aee:	8b e2       	ldi	r24, 0x2B	; 43
 af0:	01 c0       	rjmp	.+2      	; 0xaf4 <__stack+0x1f5>
 af2:	80 e2       	ldi	r24, 0x20	; 32
 af4:	07 fd       	sbrc	r16, 7
 af6:	8d e2       	ldi	r24, 0x2D	; 45
 af8:	b7 01       	movw	r22, r14
 afa:	90 e0       	ldi	r25, 0x00	; 0
 afc:	80 d1       	rcall	.+768    	; 0xdfe <fputc>
 afe:	c1 16       	cp	r12, r17
 b00:	30 f4       	brcc	.+12     	; 0xb0e <__stack+0x20f>
 b02:	b7 01       	movw	r22, r14
 b04:	80 e3       	ldi	r24, 0x30	; 48
 b06:	90 e0       	ldi	r25, 0x00	; 0
 b08:	7a d1       	rcall	.+756    	; 0xdfe <fputc>
 b0a:	11 50       	subi	r17, 0x01	; 1
 b0c:	f8 cf       	rjmp	.-16     	; 0xafe <__stack+0x1ff>
 b0e:	ca 94       	dec	r12
 b10:	f3 01       	movw	r30, r6
 b12:	ec 0d       	add	r30, r12
 b14:	f1 1d       	adc	r31, r1
 b16:	80 81       	ld	r24, Z
 b18:	b7 01       	movw	r22, r14
 b1a:	90 e0       	ldi	r25, 0x00	; 0
 b1c:	70 d1       	rcall	.+736    	; 0xdfe <fputc>
 b1e:	c1 10       	cpse	r12, r1
 b20:	f6 cf       	rjmp	.-20     	; 0xb0e <__stack+0x20f>
 b22:	15 c0       	rjmp	.+42     	; 0xb4e <__stack+0x24f>
 b24:	f4 e0       	ldi	r31, 0x04	; 4
 b26:	f5 15       	cp	r31, r5
 b28:	50 f5       	brcc	.+84     	; 0xb7e <__stack+0x27f>
 b2a:	84 e0       	ldi	r24, 0x04	; 4
 b2c:	58 1a       	sub	r5, r24
 b2e:	93 fe       	sbrs	r9, 3
 b30:	1e c0       	rjmp	.+60     	; 0xb6e <__stack+0x26f>
 b32:	01 11       	cpse	r16, r1
 b34:	25 c0       	rjmp	.+74     	; 0xb80 <__stack+0x281>
 b36:	2c 85       	ldd	r18, Y+12	; 0x0c
 b38:	23 ff       	sbrs	r18, 3
 b3a:	27 c0       	rjmp	.+78     	; 0xb8a <__stack+0x28b>
 b3c:	08 e6       	ldi	r16, 0x68	; 104
 b3e:	10 e0       	ldi	r17, 0x00	; 0
 b40:	39 2d       	mov	r19, r9
 b42:	30 71       	andi	r19, 0x10	; 16
 b44:	93 2e       	mov	r9, r19
 b46:	f8 01       	movw	r30, r16
 b48:	84 91       	lpm	r24, Z
 b4a:	81 11       	cpse	r24, r1
 b4c:	21 c0       	rjmp	.+66     	; 0xb90 <__stack+0x291>
 b4e:	55 20       	and	r5, r5
 b50:	09 f4       	brne	.+2      	; 0xb54 <__stack+0x255>
 b52:	fc cc       	rjmp	.-1544   	; 0x54c <vfprintf+0x54>
 b54:	b7 01       	movw	r22, r14
 b56:	80 e2       	ldi	r24, 0x20	; 32
 b58:	90 e0       	ldi	r25, 0x00	; 0
 b5a:	51 d1       	rcall	.+674    	; 0xdfe <fputc>
 b5c:	5a 94       	dec	r5
 b5e:	f7 cf       	rjmp	.-18     	; 0xb4e <__stack+0x24f>
 b60:	f7 01       	movw	r30, r14
 b62:	86 81       	ldd	r24, Z+6	; 0x06
 b64:	97 81       	ldd	r25, Z+7	; 0x07
 b66:	23 c0       	rjmp	.+70     	; 0xbae <__stack+0x2af>
 b68:	8f ef       	ldi	r24, 0xFF	; 255
 b6a:	9f ef       	ldi	r25, 0xFF	; 255
 b6c:	20 c0       	rjmp	.+64     	; 0xbae <__stack+0x2af>
 b6e:	b7 01       	movw	r22, r14
 b70:	80 e2       	ldi	r24, 0x20	; 32
 b72:	90 e0       	ldi	r25, 0x00	; 0
 b74:	44 d1       	rcall	.+648    	; 0xdfe <fputc>
 b76:	5a 94       	dec	r5
 b78:	51 10       	cpse	r5, r1
 b7a:	f9 cf       	rjmp	.-14     	; 0xb6e <__stack+0x26f>
 b7c:	da cf       	rjmp	.-76     	; 0xb32 <__stack+0x233>
 b7e:	51 2c       	mov	r5, r1
 b80:	b7 01       	movw	r22, r14
 b82:	80 2f       	mov	r24, r16
 b84:	90 e0       	ldi	r25, 0x00	; 0
 b86:	3b d1       	rcall	.+630    	; 0xdfe <fputc>
 b88:	d6 cf       	rjmp	.-84     	; 0xb36 <__stack+0x237>
 b8a:	0c e6       	ldi	r16, 0x6C	; 108
 b8c:	10 e0       	ldi	r17, 0x00	; 0
 b8e:	d8 cf       	rjmp	.-80     	; 0xb40 <__stack+0x241>
 b90:	91 10       	cpse	r9, r1
 b92:	80 52       	subi	r24, 0x20	; 32
 b94:	b7 01       	movw	r22, r14
 b96:	90 e0       	ldi	r25, 0x00	; 0
 b98:	32 d1       	rcall	.+612    	; 0xdfe <fputc>
 b9a:	0f 5f       	subi	r16, 0xFF	; 255
 b9c:	1f 4f       	sbci	r17, 0xFF	; 255
 b9e:	d3 cf       	rjmp	.-90     	; 0xb46 <__stack+0x247>
 ba0:	23 e0       	ldi	r18, 0x03	; 3
 ba2:	25 15       	cp	r18, r5
 ba4:	10 f4       	brcc	.+4      	; 0xbaa <__stack+0x2ab>
 ba6:	83 e0       	ldi	r24, 0x03	; 3
 ba8:	c1 cf       	rjmp	.-126    	; 0xb2c <__stack+0x22d>
 baa:	51 2c       	mov	r5, r1
 bac:	c4 cf       	rjmp	.-120    	; 0xb36 <__stack+0x237>
 bae:	60 96       	adiw	r28, 0x10	; 16
 bb0:	e2 e1       	ldi	r30, 0x12	; 18
 bb2:	1c c0       	rjmp	.+56     	; 0xbec <__epilogue_restores__>

00000bb4 <__prologue_saves__>:
 bb4:	2f 92       	push	r2
 bb6:	3f 92       	push	r3
 bb8:	4f 92       	push	r4
 bba:	5f 92       	push	r5
 bbc:	6f 92       	push	r6
 bbe:	7f 92       	push	r7
 bc0:	8f 92       	push	r8
 bc2:	9f 92       	push	r9
 bc4:	af 92       	push	r10
 bc6:	bf 92       	push	r11
 bc8:	cf 92       	push	r12
 bca:	df 92       	push	r13
 bcc:	ef 92       	push	r14
 bce:	ff 92       	push	r15
 bd0:	0f 93       	push	r16
 bd2:	1f 93       	push	r17
 bd4:	cf 93       	push	r28
 bd6:	df 93       	push	r29
 bd8:	cd b7       	in	r28, 0x3d	; 61
 bda:	de b7       	in	r29, 0x3e	; 62
 bdc:	ca 1b       	sub	r28, r26
 bde:	db 0b       	sbc	r29, r27
 be0:	0f b6       	in	r0, 0x3f	; 63
 be2:	f8 94       	cli
 be4:	de bf       	out	0x3e, r29	; 62
 be6:	0f be       	out	0x3f, r0	; 63
 be8:	cd bf       	out	0x3d, r28	; 61
 bea:	09 94       	ijmp

00000bec <__epilogue_restores__>:
 bec:	2a 88       	ldd	r2, Y+18	; 0x12
 bee:	39 88       	ldd	r3, Y+17	; 0x11
 bf0:	48 88       	ldd	r4, Y+16	; 0x10
 bf2:	5f 84       	ldd	r5, Y+15	; 0x0f
 bf4:	6e 84       	ldd	r6, Y+14	; 0x0e
 bf6:	7d 84       	ldd	r7, Y+13	; 0x0d
 bf8:	8c 84       	ldd	r8, Y+12	; 0x0c
 bfa:	9b 84       	ldd	r9, Y+11	; 0x0b
 bfc:	aa 84       	ldd	r10, Y+10	; 0x0a
 bfe:	b9 84       	ldd	r11, Y+9	; 0x09
 c00:	c8 84       	ldd	r12, Y+8	; 0x08
 c02:	df 80       	ldd	r13, Y+7	; 0x07
 c04:	ee 80       	ldd	r14, Y+6	; 0x06
 c06:	fd 80       	ldd	r15, Y+5	; 0x05
 c08:	0c 81       	ldd	r16, Y+4	; 0x04
 c0a:	1b 81       	ldd	r17, Y+3	; 0x03
 c0c:	aa 81       	ldd	r26, Y+2	; 0x02
 c0e:	b9 81       	ldd	r27, Y+1	; 0x01
 c10:	ce 0f       	add	r28, r30
 c12:	d1 1d       	adc	r29, r1
 c14:	0f b6       	in	r0, 0x3f	; 63
 c16:	f8 94       	cli
 c18:	de bf       	out	0x3e, r29	; 62
 c1a:	0f be       	out	0x3f, r0	; 63
 c1c:	cd bf       	out	0x3d, r28	; 61
 c1e:	ed 01       	movw	r28, r26
 c20:	08 95       	ret

00000c22 <__ftoa_engine>:
 c22:	28 30       	cpi	r18, 0x08	; 8
 c24:	08 f0       	brcs	.+2      	; 0xc28 <__ftoa_engine+0x6>
 c26:	27 e0       	ldi	r18, 0x07	; 7
 c28:	33 27       	eor	r19, r19
 c2a:	da 01       	movw	r26, r20
 c2c:	99 0f       	add	r25, r25
 c2e:	31 1d       	adc	r19, r1
 c30:	87 fd       	sbrc	r24, 7
 c32:	91 60       	ori	r25, 0x01	; 1
 c34:	00 96       	adiw	r24, 0x00	; 0
 c36:	61 05       	cpc	r22, r1
 c38:	71 05       	cpc	r23, r1
 c3a:	39 f4       	brne	.+14     	; 0xc4a <__ftoa_engine+0x28>
 c3c:	32 60       	ori	r19, 0x02	; 2
 c3e:	2e 5f       	subi	r18, 0xFE	; 254
 c40:	3d 93       	st	X+, r19
 c42:	30 e3       	ldi	r19, 0x30	; 48
 c44:	2a 95       	dec	r18
 c46:	e1 f7       	brne	.-8      	; 0xc40 <__ftoa_engine+0x1e>
 c48:	08 95       	ret
 c4a:	9f 3f       	cpi	r25, 0xFF	; 255
 c4c:	30 f0       	brcs	.+12     	; 0xc5a <__ftoa_engine+0x38>
 c4e:	80 38       	cpi	r24, 0x80	; 128
 c50:	71 05       	cpc	r23, r1
 c52:	61 05       	cpc	r22, r1
 c54:	09 f0       	breq	.+2      	; 0xc58 <__ftoa_engine+0x36>
 c56:	3c 5f       	subi	r19, 0xFC	; 252
 c58:	3c 5f       	subi	r19, 0xFC	; 252
 c5a:	3d 93       	st	X+, r19
 c5c:	91 30       	cpi	r25, 0x01	; 1
 c5e:	08 f0       	brcs	.+2      	; 0xc62 <__ftoa_engine+0x40>
 c60:	80 68       	ori	r24, 0x80	; 128
 c62:	91 1d       	adc	r25, r1
 c64:	df 93       	push	r29
 c66:	cf 93       	push	r28
 c68:	1f 93       	push	r17
 c6a:	0f 93       	push	r16
 c6c:	ff 92       	push	r15
 c6e:	ef 92       	push	r14
 c70:	19 2f       	mov	r17, r25
 c72:	98 7f       	andi	r25, 0xF8	; 248
 c74:	96 95       	lsr	r25
 c76:	e9 2f       	mov	r30, r25
 c78:	96 95       	lsr	r25
 c7a:	96 95       	lsr	r25
 c7c:	e9 0f       	add	r30, r25
 c7e:	ff 27       	eor	r31, r31
 c80:	e6 53       	subi	r30, 0x36	; 54
 c82:	ff 4f       	sbci	r31, 0xFF	; 255
 c84:	99 27       	eor	r25, r25
 c86:	33 27       	eor	r19, r19
 c88:	ee 24       	eor	r14, r14
 c8a:	ff 24       	eor	r15, r15
 c8c:	a7 01       	movw	r20, r14
 c8e:	e7 01       	movw	r28, r14
 c90:	05 90       	lpm	r0, Z+
 c92:	08 94       	sec
 c94:	07 94       	ror	r0
 c96:	28 f4       	brcc	.+10     	; 0xca2 <__ftoa_engine+0x80>
 c98:	36 0f       	add	r19, r22
 c9a:	e7 1e       	adc	r14, r23
 c9c:	f8 1e       	adc	r15, r24
 c9e:	49 1f       	adc	r20, r25
 ca0:	51 1d       	adc	r21, r1
 ca2:	66 0f       	add	r22, r22
 ca4:	77 1f       	adc	r23, r23
 ca6:	88 1f       	adc	r24, r24
 ca8:	99 1f       	adc	r25, r25
 caa:	06 94       	lsr	r0
 cac:	a1 f7       	brne	.-24     	; 0xc96 <__ftoa_engine+0x74>
 cae:	05 90       	lpm	r0, Z+
 cb0:	07 94       	ror	r0
 cb2:	28 f4       	brcc	.+10     	; 0xcbe <__ftoa_engine+0x9c>
 cb4:	e7 0e       	add	r14, r23
 cb6:	f8 1e       	adc	r15, r24
 cb8:	49 1f       	adc	r20, r25
 cba:	56 1f       	adc	r21, r22
 cbc:	c1 1d       	adc	r28, r1
 cbe:	77 0f       	add	r23, r23
 cc0:	88 1f       	adc	r24, r24
 cc2:	99 1f       	adc	r25, r25
 cc4:	66 1f       	adc	r22, r22
 cc6:	06 94       	lsr	r0
 cc8:	a1 f7       	brne	.-24     	; 0xcb2 <__ftoa_engine+0x90>
 cca:	05 90       	lpm	r0, Z+
 ccc:	07 94       	ror	r0
 cce:	28 f4       	brcc	.+10     	; 0xcda <__ftoa_engine+0xb8>
 cd0:	f8 0e       	add	r15, r24
 cd2:	49 1f       	adc	r20, r25
 cd4:	56 1f       	adc	r21, r22
 cd6:	c7 1f       	adc	r28, r23
 cd8:	d1 1d       	adc	r29, r1
 cda:	88 0f       	add	r24, r24
 cdc:	99 1f       	adc	r25, r25
 cde:	66 1f       	adc	r22, r22
 ce0:	77 1f       	adc	r23, r23
 ce2:	06 94       	lsr	r0
 ce4:	a1 f7       	brne	.-24     	; 0xcce <__ftoa_engine+0xac>
 ce6:	05 90       	lpm	r0, Z+
 ce8:	07 94       	ror	r0
 cea:	20 f4       	brcc	.+8      	; 0xcf4 <__ftoa_engine+0xd2>
 cec:	49 0f       	add	r20, r25
 cee:	56 1f       	adc	r21, r22
 cf0:	c7 1f       	adc	r28, r23
 cf2:	d8 1f       	adc	r29, r24
 cf4:	99 0f       	add	r25, r25
 cf6:	66 1f       	adc	r22, r22
 cf8:	77 1f       	adc	r23, r23
 cfa:	88 1f       	adc	r24, r24
 cfc:	06 94       	lsr	r0
 cfe:	a9 f7       	brne	.-22     	; 0xcea <__ftoa_engine+0xc8>
 d00:	84 91       	lpm	r24, Z
 d02:	10 95       	com	r17
 d04:	17 70       	andi	r17, 0x07	; 7
 d06:	41 f0       	breq	.+16     	; 0xd18 <__ftoa_engine+0xf6>
 d08:	d6 95       	lsr	r29
 d0a:	c7 95       	ror	r28
 d0c:	57 95       	ror	r21
 d0e:	47 95       	ror	r20
 d10:	f7 94       	ror	r15
 d12:	e7 94       	ror	r14
 d14:	1a 95       	dec	r17
 d16:	c1 f7       	brne	.-16     	; 0xd08 <__ftoa_engine+0xe6>
 d18:	e0 e7       	ldi	r30, 0x70	; 112
 d1a:	f0 e0       	ldi	r31, 0x00	; 0
 d1c:	68 94       	set
 d1e:	15 90       	lpm	r1, Z+
 d20:	15 91       	lpm	r17, Z+
 d22:	35 91       	lpm	r19, Z+
 d24:	65 91       	lpm	r22, Z+
 d26:	95 91       	lpm	r25, Z+
 d28:	05 90       	lpm	r0, Z+
 d2a:	7f e2       	ldi	r23, 0x2F	; 47
 d2c:	73 95       	inc	r23
 d2e:	e1 18       	sub	r14, r1
 d30:	f1 0a       	sbc	r15, r17
 d32:	43 0b       	sbc	r20, r19
 d34:	56 0b       	sbc	r21, r22
 d36:	c9 0b       	sbc	r28, r25
 d38:	d0 09       	sbc	r29, r0
 d3a:	c0 f7       	brcc	.-16     	; 0xd2c <__ftoa_engine+0x10a>
 d3c:	e1 0c       	add	r14, r1
 d3e:	f1 1e       	adc	r15, r17
 d40:	43 1f       	adc	r20, r19
 d42:	56 1f       	adc	r21, r22
 d44:	c9 1f       	adc	r28, r25
 d46:	d0 1d       	adc	r29, r0
 d48:	7e f4       	brtc	.+30     	; 0xd68 <__ftoa_engine+0x146>
 d4a:	70 33       	cpi	r23, 0x30	; 48
 d4c:	11 f4       	brne	.+4      	; 0xd52 <__ftoa_engine+0x130>
 d4e:	8a 95       	dec	r24
 d50:	e6 cf       	rjmp	.-52     	; 0xd1e <__ftoa_engine+0xfc>
 d52:	e8 94       	clt
 d54:	01 50       	subi	r16, 0x01	; 1
 d56:	30 f0       	brcs	.+12     	; 0xd64 <__ftoa_engine+0x142>
 d58:	08 0f       	add	r16, r24
 d5a:	0a f4       	brpl	.+2      	; 0xd5e <__ftoa_engine+0x13c>
 d5c:	00 27       	eor	r16, r16
 d5e:	02 17       	cp	r16, r18
 d60:	08 f4       	brcc	.+2      	; 0xd64 <__ftoa_engine+0x142>
 d62:	20 2f       	mov	r18, r16
 d64:	23 95       	inc	r18
 d66:	02 2f       	mov	r16, r18
 d68:	7a 33       	cpi	r23, 0x3A	; 58
 d6a:	28 f0       	brcs	.+10     	; 0xd76 <__ftoa_engine+0x154>
 d6c:	79 e3       	ldi	r23, 0x39	; 57
 d6e:	7d 93       	st	X+, r23
 d70:	2a 95       	dec	r18
 d72:	e9 f7       	brne	.-6      	; 0xd6e <__ftoa_engine+0x14c>
 d74:	10 c0       	rjmp	.+32     	; 0xd96 <__ftoa_engine+0x174>
 d76:	7d 93       	st	X+, r23
 d78:	2a 95       	dec	r18
 d7a:	89 f6       	brne	.-94     	; 0xd1e <__ftoa_engine+0xfc>
 d7c:	06 94       	lsr	r0
 d7e:	97 95       	ror	r25
 d80:	67 95       	ror	r22
 d82:	37 95       	ror	r19
 d84:	17 95       	ror	r17
 d86:	17 94       	ror	r1
 d88:	e1 18       	sub	r14, r1
 d8a:	f1 0a       	sbc	r15, r17
 d8c:	43 0b       	sbc	r20, r19
 d8e:	56 0b       	sbc	r21, r22
 d90:	c9 0b       	sbc	r28, r25
 d92:	d0 09       	sbc	r29, r0
 d94:	98 f0       	brcs	.+38     	; 0xdbc <__ftoa_engine+0x19a>
 d96:	23 95       	inc	r18
 d98:	7e 91       	ld	r23, -X
 d9a:	73 95       	inc	r23
 d9c:	7a 33       	cpi	r23, 0x3A	; 58
 d9e:	08 f0       	brcs	.+2      	; 0xda2 <__ftoa_engine+0x180>
 da0:	70 e3       	ldi	r23, 0x30	; 48
 da2:	7c 93       	st	X, r23
 da4:	20 13       	cpse	r18, r16
 da6:	b8 f7       	brcc	.-18     	; 0xd96 <__ftoa_engine+0x174>
 da8:	7e 91       	ld	r23, -X
 daa:	70 61       	ori	r23, 0x10	; 16
 dac:	7d 93       	st	X+, r23
 dae:	30 f0       	brcs	.+12     	; 0xdbc <__ftoa_engine+0x19a>
 db0:	83 95       	inc	r24
 db2:	71 e3       	ldi	r23, 0x31	; 49
 db4:	7d 93       	st	X+, r23
 db6:	70 e3       	ldi	r23, 0x30	; 48
 db8:	2a 95       	dec	r18
 dba:	e1 f7       	brne	.-8      	; 0xdb4 <__ftoa_engine+0x192>
 dbc:	11 24       	eor	r1, r1
 dbe:	ef 90       	pop	r14
 dc0:	ff 90       	pop	r15
 dc2:	0f 91       	pop	r16
 dc4:	1f 91       	pop	r17
 dc6:	cf 91       	pop	r28
 dc8:	df 91       	pop	r29
 dca:	99 27       	eor	r25, r25
 dcc:	87 fd       	sbrc	r24, 7
 dce:	90 95       	com	r25
 dd0:	08 95       	ret

00000dd2 <strnlen_P>:
 dd2:	fc 01       	movw	r30, r24
 dd4:	05 90       	lpm	r0, Z+
 dd6:	61 50       	subi	r22, 0x01	; 1
 dd8:	70 40       	sbci	r23, 0x00	; 0
 dda:	01 10       	cpse	r0, r1
 ddc:	d8 f7       	brcc	.-10     	; 0xdd4 <strnlen_P+0x2>
 dde:	80 95       	com	r24
 de0:	90 95       	com	r25
 de2:	8e 0f       	add	r24, r30
 de4:	9f 1f       	adc	r25, r31
 de6:	08 95       	ret

00000de8 <strnlen>:
 de8:	fc 01       	movw	r30, r24
 dea:	61 50       	subi	r22, 0x01	; 1
 dec:	70 40       	sbci	r23, 0x00	; 0
 dee:	01 90       	ld	r0, Z+
 df0:	01 10       	cpse	r0, r1
 df2:	d8 f7       	brcc	.-10     	; 0xdea <strnlen+0x2>
 df4:	80 95       	com	r24
 df6:	90 95       	com	r25
 df8:	8e 0f       	add	r24, r30
 dfa:	9f 1f       	adc	r25, r31
 dfc:	08 95       	ret

00000dfe <fputc>:
 dfe:	0f 93       	push	r16
 e00:	1f 93       	push	r17
 e02:	cf 93       	push	r28
 e04:	df 93       	push	r29
 e06:	fb 01       	movw	r30, r22
 e08:	23 81       	ldd	r18, Z+3	; 0x03
 e0a:	21 fd       	sbrc	r18, 1
 e0c:	03 c0       	rjmp	.+6      	; 0xe14 <fputc+0x16>
 e0e:	8f ef       	ldi	r24, 0xFF	; 255
 e10:	9f ef       	ldi	r25, 0xFF	; 255
 e12:	2c c0       	rjmp	.+88     	; 0xe6c <fputc+0x6e>
 e14:	22 ff       	sbrs	r18, 2
 e16:	16 c0       	rjmp	.+44     	; 0xe44 <fputc+0x46>
 e18:	46 81       	ldd	r20, Z+6	; 0x06
 e1a:	57 81       	ldd	r21, Z+7	; 0x07
 e1c:	24 81       	ldd	r18, Z+4	; 0x04
 e1e:	35 81       	ldd	r19, Z+5	; 0x05
 e20:	42 17       	cp	r20, r18
 e22:	53 07       	cpc	r21, r19
 e24:	44 f4       	brge	.+16     	; 0xe36 <fputc+0x38>
 e26:	a0 81       	ld	r26, Z
 e28:	b1 81       	ldd	r27, Z+1	; 0x01
 e2a:	9d 01       	movw	r18, r26
 e2c:	2f 5f       	subi	r18, 0xFF	; 255
 e2e:	3f 4f       	sbci	r19, 0xFF	; 255
 e30:	31 83       	std	Z+1, r19	; 0x01
 e32:	20 83       	st	Z, r18
 e34:	8c 93       	st	X, r24
 e36:	26 81       	ldd	r18, Z+6	; 0x06
 e38:	37 81       	ldd	r19, Z+7	; 0x07
 e3a:	2f 5f       	subi	r18, 0xFF	; 255
 e3c:	3f 4f       	sbci	r19, 0xFF	; 255
 e3e:	37 83       	std	Z+7, r19	; 0x07
 e40:	26 83       	std	Z+6, r18	; 0x06
 e42:	14 c0       	rjmp	.+40     	; 0xe6c <fputc+0x6e>
 e44:	8b 01       	movw	r16, r22
 e46:	ec 01       	movw	r28, r24
 e48:	fb 01       	movw	r30, r22
 e4a:	00 84       	ldd	r0, Z+8	; 0x08
 e4c:	f1 85       	ldd	r31, Z+9	; 0x09
 e4e:	e0 2d       	mov	r30, r0
 e50:	09 95       	icall
 e52:	89 2b       	or	r24, r25
 e54:	e1 f6       	brne	.-72     	; 0xe0e <fputc+0x10>
 e56:	d8 01       	movw	r26, r16
 e58:	16 96       	adiw	r26, 0x06	; 6
 e5a:	8d 91       	ld	r24, X+
 e5c:	9c 91       	ld	r25, X
 e5e:	17 97       	sbiw	r26, 0x07	; 7
 e60:	01 96       	adiw	r24, 0x01	; 1
 e62:	17 96       	adiw	r26, 0x07	; 7
 e64:	9c 93       	st	X, r25
 e66:	8e 93       	st	-X, r24
 e68:	16 97       	sbiw	r26, 0x06	; 6
 e6a:	ce 01       	movw	r24, r28
 e6c:	df 91       	pop	r29
 e6e:	cf 91       	pop	r28
 e70:	1f 91       	pop	r17
 e72:	0f 91       	pop	r16
 e74:	08 95       	ret

00000e76 <sprintf>:
 e76:	ae e0       	ldi	r26, 0x0E	; 14
 e78:	b0 e0       	ldi	r27, 0x00	; 0
 e7a:	e0 e4       	ldi	r30, 0x40	; 64
 e7c:	f7 e0       	ldi	r31, 0x07	; 7
 e7e:	a8 ce       	rjmp	.-688    	; 0xbd0 <__prologue_saves__+0x1c>
 e80:	0d 89       	ldd	r16, Y+21	; 0x15
 e82:	1e 89       	ldd	r17, Y+22	; 0x16
 e84:	86 e0       	ldi	r24, 0x06	; 6
 e86:	8c 83       	std	Y+4, r24	; 0x04
 e88:	1a 83       	std	Y+2, r17	; 0x02
 e8a:	09 83       	std	Y+1, r16	; 0x01
 e8c:	8f ef       	ldi	r24, 0xFF	; 255
 e8e:	9f e7       	ldi	r25, 0x7F	; 127
 e90:	9e 83       	std	Y+6, r25	; 0x06
 e92:	8d 83       	std	Y+5, r24	; 0x05
 e94:	ae 01       	movw	r20, r28
 e96:	47 5e       	subi	r20, 0xE7	; 231
 e98:	5f 4f       	sbci	r21, 0xFF	; 255
 e9a:	6f 89       	ldd	r22, Y+23	; 0x17
 e9c:	78 8d       	ldd	r23, Y+24	; 0x18
 e9e:	ce 01       	movw	r24, r28
 ea0:	01 96       	adiw	r24, 0x01	; 1
 ea2:	2a db       	rcall	.-2476   	; 0x4f8 <vfprintf>
 ea4:	ef 81       	ldd	r30, Y+7	; 0x07
 ea6:	f8 85       	ldd	r31, Y+8	; 0x08
 ea8:	e0 0f       	add	r30, r16
 eaa:	f1 1f       	adc	r31, r17
 eac:	10 82       	st	Z, r1
 eae:	2e 96       	adiw	r28, 0x0e	; 14
 eb0:	e4 e0       	ldi	r30, 0x04	; 4
 eb2:	aa ce       	rjmp	.-684    	; 0xc08 <__epilogue_restores__+0x1c>

00000eb4 <__ultoa_invert>:
 eb4:	fa 01       	movw	r30, r20
 eb6:	aa 27       	eor	r26, r26
 eb8:	28 30       	cpi	r18, 0x08	; 8
 eba:	51 f1       	breq	.+84     	; 0xf10 <__ultoa_invert+0x5c>
 ebc:	20 31       	cpi	r18, 0x10	; 16
 ebe:	81 f1       	breq	.+96     	; 0xf20 <__ultoa_invert+0x6c>
 ec0:	e8 94       	clt
 ec2:	6f 93       	push	r22
 ec4:	6e 7f       	andi	r22, 0xFE	; 254
 ec6:	6e 5f       	subi	r22, 0xFE	; 254
 ec8:	7f 4f       	sbci	r23, 0xFF	; 255
 eca:	8f 4f       	sbci	r24, 0xFF	; 255
 ecc:	9f 4f       	sbci	r25, 0xFF	; 255
 ece:	af 4f       	sbci	r26, 0xFF	; 255
 ed0:	b1 e0       	ldi	r27, 0x01	; 1
 ed2:	3e d0       	rcall	.+124    	; 0xf50 <__ultoa_invert+0x9c>
 ed4:	b4 e0       	ldi	r27, 0x04	; 4
 ed6:	3c d0       	rcall	.+120    	; 0xf50 <__ultoa_invert+0x9c>
 ed8:	67 0f       	add	r22, r23
 eda:	78 1f       	adc	r23, r24
 edc:	89 1f       	adc	r24, r25
 ede:	9a 1f       	adc	r25, r26
 ee0:	a1 1d       	adc	r26, r1
 ee2:	68 0f       	add	r22, r24
 ee4:	79 1f       	adc	r23, r25
 ee6:	8a 1f       	adc	r24, r26
 ee8:	91 1d       	adc	r25, r1
 eea:	a1 1d       	adc	r26, r1
 eec:	6a 0f       	add	r22, r26
 eee:	71 1d       	adc	r23, r1
 ef0:	81 1d       	adc	r24, r1
 ef2:	91 1d       	adc	r25, r1
 ef4:	a1 1d       	adc	r26, r1
 ef6:	20 d0       	rcall	.+64     	; 0xf38 <__ultoa_invert+0x84>
 ef8:	09 f4       	brne	.+2      	; 0xefc <__ultoa_invert+0x48>
 efa:	68 94       	set
 efc:	3f 91       	pop	r19
 efe:	2a e0       	ldi	r18, 0x0A	; 10
 f00:	26 9f       	mul	r18, r22
 f02:	11 24       	eor	r1, r1
 f04:	30 19       	sub	r19, r0
 f06:	30 5d       	subi	r19, 0xD0	; 208
 f08:	31 93       	st	Z+, r19
 f0a:	de f6       	brtc	.-74     	; 0xec2 <__ultoa_invert+0xe>
 f0c:	cf 01       	movw	r24, r30
 f0e:	08 95       	ret
 f10:	46 2f       	mov	r20, r22
 f12:	47 70       	andi	r20, 0x07	; 7
 f14:	40 5d       	subi	r20, 0xD0	; 208
 f16:	41 93       	st	Z+, r20
 f18:	b3 e0       	ldi	r27, 0x03	; 3
 f1a:	0f d0       	rcall	.+30     	; 0xf3a <__ultoa_invert+0x86>
 f1c:	c9 f7       	brne	.-14     	; 0xf10 <__ultoa_invert+0x5c>
 f1e:	f6 cf       	rjmp	.-20     	; 0xf0c <__ultoa_invert+0x58>
 f20:	46 2f       	mov	r20, r22
 f22:	4f 70       	andi	r20, 0x0F	; 15
 f24:	40 5d       	subi	r20, 0xD0	; 208
 f26:	4a 33       	cpi	r20, 0x3A	; 58
 f28:	18 f0       	brcs	.+6      	; 0xf30 <__ultoa_invert+0x7c>
 f2a:	49 5d       	subi	r20, 0xD9	; 217
 f2c:	31 fd       	sbrc	r19, 1
 f2e:	40 52       	subi	r20, 0x20	; 32
 f30:	41 93       	st	Z+, r20
 f32:	02 d0       	rcall	.+4      	; 0xf38 <__ultoa_invert+0x84>
 f34:	a9 f7       	brne	.-22     	; 0xf20 <__ultoa_invert+0x6c>
 f36:	ea cf       	rjmp	.-44     	; 0xf0c <__ultoa_invert+0x58>
 f38:	b4 e0       	ldi	r27, 0x04	; 4
 f3a:	a6 95       	lsr	r26
 f3c:	97 95       	ror	r25
 f3e:	87 95       	ror	r24
 f40:	77 95       	ror	r23
 f42:	67 95       	ror	r22
 f44:	ba 95       	dec	r27
 f46:	c9 f7       	brne	.-14     	; 0xf3a <__ultoa_invert+0x86>
 f48:	00 97       	sbiw	r24, 0x00	; 0
 f4a:	61 05       	cpc	r22, r1
 f4c:	71 05       	cpc	r23, r1
 f4e:	08 95       	ret
 f50:	9b 01       	movw	r18, r22
 f52:	ac 01       	movw	r20, r24
 f54:	0a 2e       	mov	r0, r26
 f56:	06 94       	lsr	r0
 f58:	57 95       	ror	r21
 f5a:	47 95       	ror	r20
 f5c:	37 95       	ror	r19
 f5e:	27 95       	ror	r18
 f60:	ba 95       	dec	r27
 f62:	c9 f7       	brne	.-14     	; 0xf56 <__ultoa_invert+0xa2>
 f64:	62 0f       	add	r22, r18
 f66:	73 1f       	adc	r23, r19
 f68:	84 1f       	adc	r24, r20
 f6a:	95 1f       	adc	r25, r21
 f6c:	a0 1d       	adc	r26, r0
 f6e:	08 95       	ret

00000f70 <_exit>:
 f70:	f8 94       	cli

00000f72 <__stop_program>:
 f72:	ff cf       	rjmp	.-2      	; 0xf72 <__stop_program>
